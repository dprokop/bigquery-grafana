{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///../node_modules/lodash-es/_root.js","webpack:///../node_modules/lodash-es/_freeGlobal.js","webpack:///../node_modules/lodash-es/_nodeUtil.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///external \"moment\"","webpack:///../node_modules/lodash-es/isBuffer.js","webpack:///../node_modules/lodash-es/stubFalse.js","webpack:///external \"app/core/app_events\"","webpack:///external \"app/plugins/sdk\"","webpack:///(webpack)/buildin/global.js","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./bigquery_query.ts","webpack:///../node_modules/lodash-es/_arrayEach.js","webpack:///../node_modules/lodash-es/_createBaseFor.js","webpack:///../node_modules/lodash-es/_baseFor.js","webpack:///../node_modules/lodash-es/_baseTimes.js","webpack:///../node_modules/lodash-es/_Symbol.js","webpack:///../node_modules/lodash-es/_getRawTag.js","webpack:///../node_modules/lodash-es/_objectToString.js","webpack:///../node_modules/lodash-es/_baseGetTag.js","webpack:///../node_modules/lodash-es/isObjectLike.js","webpack:///../node_modules/lodash-es/_baseIsArguments.js","webpack:///../node_modules/lodash-es/isArguments.js","webpack:///../node_modules/lodash-es/isArray.js","webpack:///../node_modules/lodash-es/_isIndex.js","webpack:///../node_modules/lodash-es/isLength.js","webpack:///../node_modules/lodash-es/_baseIsTypedArray.js","webpack:///../node_modules/lodash-es/_baseUnary.js","webpack:///../node_modules/lodash-es/isTypedArray.js","webpack:///../node_modules/lodash-es/_arrayLikeKeys.js","webpack:///../node_modules/lodash-es/_isPrototype.js","webpack:///../node_modules/lodash-es/_overArg.js","webpack:///../node_modules/lodash-es/_nativeKeys.js","webpack:///../node_modules/lodash-es/_baseKeys.js","webpack:///../node_modules/lodash-es/isObject.js","webpack:///../node_modules/lodash-es/isFunction.js","webpack:///../node_modules/lodash-es/isArrayLike.js","webpack:///../node_modules/lodash-es/keys.js","webpack:///../node_modules/lodash-es/_createBaseEach.js","webpack:///../node_modules/lodash-es/_baseEach.js","webpack:///../node_modules/lodash-es/_baseForOwn.js","webpack:///../node_modules/lodash-es/identity.js","webpack:///../node_modules/lodash-es/_castFunction.js","webpack:///../node_modules/lodash-es/forEach.js","webpack:///../node_modules/uuid/dist/esm-browser/rng.js","webpack:///./response_parser.ts","webpack:///./sql_parser.ts","webpack:///../node_modules/uuid/dist/esm-browser/regex.js","webpack:///../node_modules/uuid/dist/esm-browser/stringify.js","webpack:///../node_modules/uuid/dist/esm-browser/validate.js","webpack:///../node_modules/uuid/dist/esm-browser/v4.js","webpack:///./datasource.ts","webpack:///./sql_part.ts","webpack:///./query_ctrl.ts","webpack:///./config_ctrl.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","freeSelf","self","root","Function","freeGlobal","global","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","e","originalModule","webpackPolyfill","children","__WEBPACK_EXTERNAL_MODULE__5__","Buffer","undefined","isBuffer","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__","g","this","window","extendStatics","b","setPrototypeOf","__proto__","Array","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","f","y","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","length","push","__values","__read","ar","error","target","templateSrv","scopedVars","isWindow","isAggregate","groupBy","tmpValue","format","orderByCol","orderBySort","location","timeColumn","timeColumnType","metricColumn","group","where","type","params","select","rawQuery","interpolateQueryStr","quoteLiteral","String","replace","escapeLiteral","quoteFiledName","vals","split","res","formatDateToString","inputDate","separator","addtime","date","Date","DD","getDate","MM","getMonth","dateStr","getFullYear","toTimeString","substr","_getInterval","q","alias","interval","match","trim","getUnixSecondsFromString","str","_getShiftPeriod","groupPeriod","groupVal","getTimeShift","lastIndexOf","replaceTimeShift","convertToUtc","getTime","getTimezoneOffset","getIntervalStr","mininterval","options","_calcAutoInterval","minUnixSeconds","IntervalStr","_dateToTimestamp","unixSeconds","BigQueryQuery","Math","max","hasTimeGroup","find","hasMetricColumn","variable","defaultFormatFn","multi","includeAll","map","join","render","interpolate","rawSql","buildQuery","_buildTimeColumntimeGroup","timeGroup","args","macro","buildTimeColumn","query","buildMetricColumn","buildValueColumns","column","buildValueColumn","buildHllOuterQuery","numOfColumns","hllInd","colId","hll","_buildAggregate","aggregate","func","columnName","windows","timeshift","overParts","partBy","over","curr","prev","tmpval","buildWhereClause","conditions","tag","index","partitioned","partitionedField","timeRange","from","_d","to","sharded","buildGroupClause","groupSection","part","ind","outerQuery","outerGroupBy","values","project","dataset","table","orderBy","starFields","parent","child","includes","expend_macros","replaceTimeFilters","replacetimeGroupAlias","fromD","range","toD","convertToUTC","_getDateRangePart","tf","exec","fromRange","toRange","intervalStr","seconds","ceil","maxDataPoints","valueOf","toString","array","iteratee","fromRight","keysFunc","iterable","props","objectProto","nativeObjectToString","symToStringTag","isOwn","unmasked","propertyIsEnumerable","arguments","isArray","reIsUint","test","typedArrayTags","nodeIsTypedArray","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","Ctor","constructor","transform","arg","keys","eachFunc","collection","getRandomValues","$q","parseProjects","results","ResponseParser","parseData","parseDatasets","parseTableFields","filter","fields","_handleRecordFields","fl","text","parseDataQuery","rows","data","_toTimeSeries","_toTable","_toVar","_convertValues","Number","itemValue","itemText","objectTextList","objectValueList","item","manipulateItem","kind","timePartitioning","tableReference","tableId","field","ff","timeIndex","metricIndex","valueIndexes","schema","Error","_buildDataPoints","targetName","metricName","row","epoch","valueIndexName","concat","bucket","findOrCreateBucket","datapoints","metric","dataTarget","refId","columns","ser","val","parseTabels","_handelWildCardTables","transformAnnotationResponse","timeColumnIndex","textColumnIndex","tagsColumnIndex","message","list","annotation","tags","time","floor","tables","sorted","Map","newTables","indexOf","substring","set","forEach","getProjectDatasetTableFromSql","sqlCode","FULL_JOB_ID","SqlParser","getFullJobId","DATASET","getDatasetId","getProjectIdFromFullId","getTableId","fullJobId","matchId","fullStringId","datasetId","isStandardSql","isStandard","dotsSplit","dotsCount","toLowerCase","colonSplit","idString","fullId","partialId","projectId","splitted","__ret","try2findProjectId","matched","errorMessage","numOfInstances","projectFound","splittedProject","tableIdObj","splittedId","rnds8","Uint8Array","rng","crypto","msCrypto","uuid","byteToHex","arr","offset","buf","rnds","random","instanceSettings","backendSrv","interpolateVariable","id","jsonData","responseParser","queryModel","baseUrl","url","authenticationType","defaultProject","getDefaultProject","projectName","runInProject","flatRateProject","processingLocation","queryPriority","formatBigqueryError","status","code","errors","reason","statusText","strInterval","shift","_extractFromClause","sql","_FindTimeField","timeFields","col","search","splitFrom","_handleError","cancelled","msg","BigQueryDatasource","_createTimeShiftQuery","copy","attr","Shifted","_setupTimeShiftQuery","len","subtract","parseInt","_updatePartition","newFrom","newTo","_updateTableSuffix","queries","targets","hide","datasourceId","intervalMs","when","newQuery","allQueryPromise","tmpQ","modOptions","setUpQ","doQuery","panelId","response","sqlWithNoVariables","getDateFields","dateFields","tm","err","all","responses","dp","shiftPeriod","shiftVal","metricFindQuery","optionalOptions","interpolatedQuery","metricData","testDatasource","defaultErrorMessage","path","doRequest","getProjects","paginatedResults","getDatasets","getTables","datasetName","getTableFields","tableName","annotationQuery","datasourceRequest","priority","useLegacySql","useQueryCache","method","requestId","setUpPartition","_updateAlias","limitStatement","isPartitioned","RegExp","partition","reg","fromMatch","maxRetries","doQueryRequest","queryiesOrJobs","toUpperCase","configuration","_waitForJobComplete","queryResults","jobId","sleepTimeMs","jobComplete","ms","setTimeout","_getQueryResults","pageToken","notReady","element","jobReference","dataName","dataList","nextPageToken","shiftstr","shifted","al","aliasshiftted","oldSelect","newSelect","style","wrapOpen","wrapClose","defaultParams","def","datatype","clone","updateParam","strValue","optional","splice","register","SqlPartDef","dynamicLookup","quote","$scope","$injector","uiSegmentSrv","panel","updateProjection","formats","orderByCols","orderBySorts","locations","panelCtrl","projectSegment","newSegment","fake","datasetSegment","tableSegment","timeColumnSegment","metricColumnSegment","buildSelectMenu","whereAdd","newPlusButton","groupAdd","events","on","onDataReceived","onDataError","__","selectParts","parts","whereParts","groupParts","updatePersistedParts","selectMenu","submenu","toggleEditorMode","a","emit","icon","onConfirm","text2","title","yesText","resetPlusButton","button","plusButton","html","getProjectSegments","datasource","transformToSegments","handleQueryError","projectChanged","applySegment","fakeSegment","getDatasetSegments","datasetChanged","getTableSegments","tablesDataPromise","tableChanged","segment","task1","getTimeColumnSegments","timeColumnChanged","task2","getValueColumnSegments","refresh","_getColumnSegments","_getDateFieldType","partModel","setwWereParts","getMetricColumnSegments","metricColumnChanged","queryRes","lastQueryMeta","meta","lastQueryError","config","segments","expandable","addTemplateVars","variables","templateQuoter","unshift","addNone","findAggregateIndex","findIndex","findWindowIndex","findHllIndex","findTimeShiftIndex","dst","src","addSelectPart","subItem","partType","addAlias","_addAlias","addGroup","aggIndex","windowIndex","timeShiftIndex","removeSelectPart","modelsIndex","partIndex","handleSelectPartEvent","evt","handleGroupPartEvent","_getAllFields","removeGroup","_setGroupParts","some","handleWherePartEvent","param","newOperators","getWhereOptions","addWhereAction","getGroupOptions","addGroupAction","templateUrl","datasourceSrv","validationErrors","defaultAuthenticationType","defaultFlatRateProject","defaultProcessingLocation","current","processingLocations","secureJsonData","secureJsonFields","authenticationTypes","onUpload","json","jsonText","validateJwt","save","onPasteJwt","JSON","parse","originalEvent","clipboardData","getData","resetValidationMessages","inputDataValid","jwt","privateKey","private_key","tokenUri","token_uri","clientEmail","client_email","project_id"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import _ from 'lodash';\nimport { BigQueryDatasource } from './datasource';\n\nexport default class BigQueryQuery {\n  public static quoteLiteral(value) {\n    return \"'\" + String(value).replace(/'/g, \"''\") + \"'\";\n  }\n\n  public static escapeLiteral(value) {\n    return String(value).replace(/'/g, \"''\");\n  }\n\n  public static quoteFiledName(value) {\n    const vals = value.split('.');\n    let res = '';\n    for (let i = 0; i < vals.length; i++) {\n      res = res + '`' + String(vals[i]) + '`';\n      if (vals.length > 1 && i + 1 < vals.length) {\n        res = res + '.';\n      }\n    }\n    return res;\n  }\n\n  public static formatDateToString(inputDate, separator = '', addtime = false) {\n    const date = new Date(inputDate);\n    // 01, 02, 03, ... 29, 30, 31\n    const DD = (date.getDate() < 10 ? '0' : '') + date.getDate();\n    // 01, 02, 03, ... 10, 11, 12\n    const MM = (date.getMonth() + 1 < 10 ? '0' : '') + (date.getMonth() + 1);\n    // 1970, 1971, ... 2015, 2016, ...\n    const YYYY = date.getFullYear();\n\n    // create the format you want\n    let dateStr = YYYY + separator + MM + separator + DD;\n    if (addtime === true) {\n      dateStr += ' ' + date.toTimeString().substr(0, 8);\n    }\n    return dateStr;\n  }\n\n  public static _getInterval(q, alias: boolean) {\n    const interval: string[] = [];\n    const res = alias\n      ? q.match(/(\\$__timeGroupAlias\\(([\\w._]+,)).*?(?=\\))/g)\n      : q.match(/(\\$__timeGroup\\(([\\w_.]+,)).*?(?=\\))/g);\n    if (res) {\n      interval[0] = res[0].split(',')[1] ? res[0].split(',')[1].trim() : res[0].split(',')[1];\n      interval[1] = res[0].split(',')[2] ? res[0].split(',')[2].trim() : res[0].split(',')[2];\n    }\n    return interval;\n  }\n\n  public static getUnixSecondsFromString(str) {\n    if (str === undefined) {\n      return 0;\n    }\n    const res = BigQueryDatasource._getShiftPeriod(str);\n    const groupPeriod = res[0];\n    const groupVal = res[1];\n    switch (groupPeriod) {\n      case 's':\n        return 1 * groupVal;\n      case 'm':\n        return 60 * groupVal;\n      case 'h':\n        return 3600 * groupVal;\n      case 'd':\n        return groupVal * 86400;\n      case 'w':\n        return 604800 * groupVal;\n      case 'M':\n        return 2629743 * groupVal;\n      case 'y':\n        return 31536000 * groupVal;\n    }\n    return 0;\n  }\n\n  public static getTimeShift(q) {\n    let res: string;\n    res = q.match(/(.*\\$__timeShifting\\().*?(?=\\))/g);\n    if (res) {\n      res = res[0].substr(1 + res[0].lastIndexOf('('));\n    }\n    return res;\n  }\n\n  public static replaceTimeShift(q) {\n    return q.replace(/(\\$__timeShifting\\().*?(?=\\))./g, '');\n  }\n  static convertToUtc(d) {\n    return new Date(d.getTime() + d.getTimezoneOffset() * 60000);\n  }\n\n  public target: any;\n  public templateSrv: any;\n  public scopedVars: any;\n  public isWindow: boolean;\n  public isAggregate: boolean;\n  public hll: any;\n  public groupBy: string;\n  public tmpValue: string;\n\n  /** @ngInject */\n  constructor(target, templateSrv?, scopedVars?) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n    this.isWindow = false;\n    this.isAggregate = false;\n    this.groupBy = '';\n    this.tmpValue = '';\n\n    target.format = target.format || 'time_series';\n    target.orderByCol = target.orderByCol || '1';\n    target.orderBySort = target.orderBySort || '1';\n    target.location = target.location || undefined;\n    target.timeColumn = target.timeColumn || '-- time --';\n    target.timeColumnType = target.timeColumnType || 'TIMESTAMP';\n    target.metricColumn = target.metricColumn || 'none';\n    target.group = target.group || [];\n    target.where = target.where || [{ type: 'macro', name: '$__timeFilter', params: [] }];\n    target.select = target.select || [[{ type: 'column', params: ['-- value --'] }]];\n    // handle pre query gui panels gracefully\n    if (!('rawQuery' in this.target)) {\n      target.rawQuery = 'rawSql' in target;\n    }\n\n    // give interpolateQueryStr access to this\n    this.interpolateQueryStr = this.interpolateQueryStr.bind(this);\n  }\n\n  public getIntervalStr(interval: string, mininterval: string, options) {\n    if (interval === 'auto') {\n      interval = this._calcAutoInterval(options);\n    }\n    const res = BigQueryDatasource._getShiftPeriod(interval);\n    const groupPeriod = res[0];\n    let IntervalStr = 'TIMESTAMP_SECONDS(DIV(UNIX_SECONDS(' + this._dateToTimestamp() + '), ';\n    let unixSeconds = BigQueryQuery.getUnixSecondsFromString(interval);\n    let minUnixSeconds;\n    minUnixSeconds = !(mininterval !== undefined || mininterval !== '0')\n      ? 0\n      : BigQueryQuery.getUnixSecondsFromString(mininterval);\n    unixSeconds = Math.max(unixSeconds, minUnixSeconds);\n    if (groupPeriod === 'M') {\n      IntervalStr =\n        'TIMESTAMP(' +\n        '  (' +\n        'PARSE_DATE( \"%Y-%m-%d\",CONCAT( CAST((EXTRACT(YEAR FROM ' +\n        BigQueryQuery.quoteFiledName(this.target.timeColumn) +\n        \")) AS STRING),'-',CAST((EXTRACT(MONTH FROM \" +\n        BigQueryQuery.quoteFiledName(this.target.timeColumn) +\n        ')) AS STRING),' +\n        \"'-','01'\" +\n        ')' +\n        ')' +\n        ')' +\n        ')';\n    } else {\n      IntervalStr += unixSeconds + ') * ' + unixSeconds + ')';\n    }\n    return IntervalStr + ' AS time';\n  }\n\n  public hasTimeGroup() {\n    return _.find(this.target.group, (g: any) => g.type === 'time');\n  }\n\n  public hasMetricColumn() {\n    return this.target.metricColumn !== 'none';\n  }\n\n  public interpolateQueryStr(value, variable, defaultFormatFn) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return BigQueryQuery.escapeLiteral(value);\n    }\n\n    if (typeof value === 'string') {\n      return BigQueryQuery.quoteLiteral(value);\n    }\n\n    const escapedValues = _.map(value, BigQueryQuery.quoteLiteral);\n    return escapedValues.join(',');\n  }\n\n  public render(interpolate?) {\n    const target = this.target;\n    // new query with no table set yet\n    if (!this.target.rawQuery && !('table' in this.target)) {\n      return '';\n    }\n    if (!target.rawQuery) {\n      target.rawSql = this.buildQuery();\n    }\n    if (interpolate) {\n      return this.templateSrv.replace(target.rawSql, this.scopedVars, this.interpolateQueryStr);\n    } else {\n      return target.rawSql;\n    }\n  }\n\n  public _buildTimeColumntimeGroup(alias, timeGroup) {\n    let args;\n    let macro = '$__timeGroup';\n\n    args = !(timeGroup.params.length > 1 && timeGroup.params[1] !== 'none')\n      ? timeGroup.params[0]\n      : timeGroup.params.join(',');\n    if (alias) {\n      macro += 'Alias';\n    }\n    return macro + '(' + this.target.timeColumn + ',' + args + ')';\n  }\n\n  public buildTimeColumn(alias = true) {\n    const timeGroup = this.hasTimeGroup();\n    let query;\n    if (timeGroup) {\n      query = this._buildTimeColumntimeGroup(alias, timeGroup);\n    } else {\n      query = BigQueryQuery.quoteFiledName(this.target.timeColumn);\n      if (alias) {\n        query += ' AS time';\n      }\n    }\n    return query;\n  }\n\n  public buildMetricColumn() {\n    if (this.hasMetricColumn()) {\n      return BigQueryQuery.quoteFiledName(this.target.metricColumn) + ' AS metric';\n    }\n\n    return '';\n  }\n\n  public buildValueColumns() {\n    let query = '';\n    for (const column of this.target.select) {\n      const c = this.buildValueColumn(column);\n      if (c.length > 0) {\n        query += ',\\n  ' + c;\n      }\n    }\n    return query;\n  }\n\n  public buildHllOuterQuery() {\n    let query = 'time';\n    let numOfColumns = 1;\n    let hllInd = 0;\n    if (this.hasMetricColumn()) {\n      query += ',\\nmetric';\n      numOfColumns += 1;\n    }\n    let colId = 0;\n    for (const column of this.target.select) {\n      const hll = _.find(column, (g: any) => g.type === 'hll_count.merge' || g.type === 'hll_count.extract');\n      const alias = _.find(column, (g: any) => g.type === 'alias');\n      numOfColumns += 1;\n      if (hll) {\n        if (hll.type === 'hll_count.merge') {\n          hllInd = numOfColumns;\n        }\n        query += ',\\n' + hll.type + '(respondents_hll)';\n        if (alias) {\n          query += ' AS ' + alias.params[0];\n        }\n      } else {\n        if (alias) {\n          query += ',\\n' + alias.params[0];\n        } else {\n          query += ',\\n' + 'f' + colId;\n          colId += 1;\n        }\n      }\n    }\n    return { query, numOfColumns, hllInd };\n  }\n\n  public _buildAggregate(aggregate, query) {\n    if (aggregate) {\n      const func = aggregate.params[0];\n      switch (aggregate.type) {\n        case 'aggregate':\n          query =\n            func === 'first' || func === 'last'\n              ? func + '(' + query + ',' + this.target.timeColumn + ')'\n              : func + '(' + query + ')';\n          break;\n        case 'percentile':\n          query = func + '(' + aggregate.params[1] + ') WITHIN GROUP (ORDER BY ' + query + ')';\n          break;\n      }\n    }\n    return query;\n  }\n\n  public buildValueColumn(column) {\n    const columnName = _.find(column, (g: any) => g.type === 'column');\n    let query = BigQueryQuery.quoteFiledName(columnName.params[0]);\n    const aggregate = _.find(column, (g: any) => g.type === 'aggregate' || g.type === 'percentile');\n    const windows = _.find(column, (g: any) => g.type === 'window' || g.type === 'moving_window');\n    const hll = _.find(column, (g: any) => g.type === 'hll_count.merge' || g.type === 'hll_count.extract');\n    if (hll !== undefined) {\n      this.hll = hll;\n      return 'HLL_COUNT.INIT (CAST(' + columnName.params[0] + ' as NUMERIC)) as respondents_hll';\n    }\n    this.isAggregate = aggregate !== undefined;\n    const timeshift = _.find(column, (g: any) => g.type === 'timeshift');\n    query = this._buildAggregate(aggregate, query);\n    if (windows) {\n      this.isWindow = true;\n      const overParts = [];\n      const partBy = 'PARTITION BY ' + this.target.timeColumn;\n      if (this.hasMetricColumn()) {\n        overParts.push(partBy + ',' + this.target.metricColumn);\n      } else {\n        overParts.push(partBy);\n      }\n      overParts.push('ORDER BY ' + this.buildTimeColumn(false));\n      const over = overParts.join(' ');\n      const curr = query;\n      let prev: string;\n      const tmpval = query;\n      switch (windows.type) {\n        case 'window':\n          switch (windows.params[0]) {\n            case 'delta':\n              prev = 'lag(' + curr + ') OVER (' + over + ')';\n              query = curr + ' - ' + prev;\n              break;\n            case 'increase':\n              prev = 'lag(' + curr + ') OVER (' + over + ')';\n              query = '(CASE WHEN ' + curr + ' >= ' + prev + ' THEN ' + curr + ' - ' + prev;\n              query += ' WHEN ' + prev + ' IS NULL THEN NULL ELSE ' + curr + ' END)';\n              break;\n            case 'rate':\n              let timeColumn = this.target.timeColumn;\n              if (aggregate) {\n                timeColumn = 'min(' + timeColumn + ')';\n              }\n              prev = 'lag(' + curr + ') OVER (' + over + ')';\n              query = '(CASE WHEN ' + curr + ' >= ' + prev + ' THEN ' + curr + ' - ' + prev;\n              query += ' WHEN ' + prev + ' IS NULL THEN NULL ELSE ' + curr + ' END)';\n              query +=\n                '/(UNIX_SECONDS(' +\n                this._dateToTimestamp() +\n                ') -UNIX_SECONDS(  lag(' +\n                this._dateToTimestamp() +\n                ') OVER (' +\n                over +\n                ')))';\n              break;\n            default:\n              query = windows.params[0] + '(' + query + ') OVER (' + over + ')';\n              break;\n          }\n          break;\n        case 'moving_window':\n          query = windows.params[0] + '(' + query + ') OVER (' + over + ' ROWS ' + windows.params[1] + ' PRECEDING)';\n          query = tmpval + ' as tmp' + tmpval + ', ' + query;\n          break;\n      }\n      this.tmpValue = 'tmp' + columnName.params[0];\n      query = tmpval + ' as ' + this.tmpValue + ', ' + query;\n    }\n    const alias = _.find(column, (g: any) => g.type === 'alias');\n    if (alias) {\n      query += ' AS ' + alias.params[0];\n    }\n    if (timeshift) {\n      query += ' $__timeShifting(' + timeshift.params[0] + ')';\n    }\n    return query;\n  }\n\n  public buildWhereClause() {\n    let query = '';\n    const conditions = _.map(this.target.where, (tag, index) => {\n      switch (tag.type) {\n        case 'macro':\n          return tag.name + '(' + this.target.timeColumn + ')';\n        case 'expression':\n          return tag.params.join(' ');\n      }\n    });\n    if (this.target.partitioned) {\n      const partitionedField = this.target.partitionedField ? this.target.partitionedField : '_PARTITIONTIME';\n      if (this.target.timeColumn !== partitionedField) {\n        if (this.templateSrv.timeRange && this.templateSrv.timeRange.from) {\n          const from = `${partitionedField} >= '${BigQueryQuery.formatDateToString(\n            this.templateSrv.timeRange.from._d,\n            '-',\n            true\n          )}'`;\n          conditions.push(from);\n        }\n        if (this.templateSrv.timeRange && this.templateSrv.timeRange.to) {\n          const to = `${partitionedField} < '${BigQueryQuery.formatDateToString(\n            this.templateSrv.timeRange.to._d,\n            '-',\n            true\n          )}'`;\n          conditions.push(to);\n        }\n      }\n    }\n    if (this.target.sharded) {\n      const from = BigQueryQuery.formatDateToString(this.templateSrv.timeRange.from._d);\n      const to = BigQueryQuery.formatDateToString(this.templateSrv.timeRange.to._d);\n      const sharded = \"_TABLE_SUFFIX BETWEEN '\" + from + \"' AND '\" + to + \"' \";\n      conditions.push(sharded);\n    }\n    if (conditions.length > 0) {\n      query = '\\nWHERE\\n  ' + conditions.join(' AND\\n  ');\n    }\n    return query;\n  }\n\n  public buildGroupClause() {\n    let query = '';\n    let groupSection = '';\n    for (let i = 0; i < this.target.group.length; i++) {\n      const part = this.target.group[i];\n      if (i > 0) {\n        groupSection += ', ';\n      }\n      if (part.type === 'time') {\n        groupSection += '1';\n      } else {\n        groupSection += part.params[0];\n      }\n    }\n    query = '\\nGROUP BY ';\n    if (groupSection.length) {\n      query += groupSection;\n      this.groupBy = query;\n      if (this.isWindow) {\n        query += ',' + this.target.timeColumn + ',' + this.tmpValue;\n        this.groupBy += ',2';\n      }\n      if (this.hasMetricColumn()) {\n        query += ',2';\n        if (this.isWindow) {\n          this.groupBy += ',3';\n        }\n      }\n    } else {\n      query = '\\nGROUP BY 1';\n    }\n    let ind = 1;\n    if (this.hasMetricColumn()) {\n      query += ',2';\n      ind += 1;\n    }\n\n    for (const column of this.target.select) {\n      const hll = _.find(column, (g: any) => g.type === 'hll_count.merge' || g.type === 'hll_count.extract');\n      const aggregate = _.find(column, (g: any) => g.type === 'aggregate' || g.type === 'percentile');\n\n      if (hll || aggregate) {\n        ind++;\n        continue;\n      }\n      ind++;\n      query += ',' + ind;\n    }\n    if (this.isWindow) {\n      query = ')' + query;\n    }\n    return query;\n  }\n\n  public buildQuery() {\n    let query = '';\n    let outerQuery = '';\n    query += '\\n' + 'SELECT';\n    query += '\\n ' + this.buildTimeColumn();\n    if (this.hasMetricColumn()) {\n      query += ',\\n  ' + this.buildMetricColumn();\n    }\n    query += this.buildValueColumns();\n    let outerGroupBy = ' GROUP BY 1';\n    if (this.hll !== undefined) {\n      const values = this.buildHllOuterQuery();\n      outerQuery = values.query;\n      const numOfColumns = values.numOfColumns;\n      const hllInd = values.hllInd;\n      for (let i = 2; i <= numOfColumns; i++) {\n        if (i === hllInd) {\n          continue;\n        }\n        outerGroupBy = outerGroupBy + ',' + i;\n      }\n    }\n    query += '\\nFROM ' + '`' + this.target.project + '.' + this.target.dataset + '.' + this.target.table + '`';\n\n    query += this.buildWhereClause();\n    query += this.buildGroupClause();\n    let orderBy = '';\n    if (!this.isWindow) {\n      orderBy = '\\nORDER BY 1';\n      if (this.hasMetricColumn()) {\n        orderBy = this.target.orderByCol === '1' ? '\\nORDER BY 1,2' : '\\nORDER BY 2,1';\n      }\n      if (this.target.orderBySort === '2') {\n        orderBy += ' DESC';\n      }\n      if (this.hll === undefined) {\n        query = query + ' ' + orderBy;\n      }\n    } else {\n      const DELIMITER = '.';\n      let starFields = '*',\n        parent,\n        child = this.tmpValue;\n      if (this.tmpValue.includes(DELIMITER)) {\n        [parent, child] = this.tmpValue.split(DELIMITER);\n        starFields += `, ${parent}.*`;\n      }\n      query = '\\nSELECT ' + starFields + ' EXCEPT (' + child + ') From \\n (' + query;\n      query = query + ' ' + this.groupBy;\n    }\n\n    if (this.hll !== undefined) {\n      query = '\\nSELECT \\n' + outerQuery + ' from \\n(' + query + ') ' + outerGroupBy + orderBy;\n    }\n    query = '#standardSQL' + query;\n    return query;\n  }\n\n  public expend_macros(options) {\n    if (this.target.rawSql) {\n      let q = this.target.rawSql;\n      q = BigQueryQuery.replaceTimeShift(q);\n      q = this.replaceTimeFilters(q, options);\n      q = this.replacetimeGroupAlias(q, true, options);\n      q = this.replacetimeGroupAlias(q, false, options);\n      return q;\n    }\n  }\n  public replaceTimeFilters(q, options) {\n    let fromD = options.range.from;\n    let toD = options.range.to;\n    if (this.target.convertToUTC === true) {\n      fromD = BigQueryQuery.convertToUtc(options.range.from._d);\n      toD = BigQueryQuery.convertToUtc(options.range.to._d);\n    }\n    let to = '';\n    let from = '';\n    from = this._getDateRangePart(fromD);\n    to = this._getDateRangePart(toD);\n    if (this.target.timeColumn === '-- time --') {\n      const myRegexp = /\\$__timeFilter\\(([\\w_.]+)\\)/g;\n      const tf = myRegexp.exec(q);\n      if (tf !== null) {\n        this.target.timeColumn = tf[1];\n      }\n    }\n    const range = BigQueryQuery.quoteFiledName(this.target.timeColumn) + ' BETWEEN ' + from + ' AND ' + to;\n    const fromRange = BigQueryQuery.quoteFiledName(this.target.timeColumn) + ' > ' + from + ' ';\n    const toRange = BigQueryQuery.quoteFiledName(this.target.timeColumn) + ' < ' + to + ' ';\n    q = q.replace(/\\$__timeFilter\\((.*?)\\)/g, range);\n    q = q.replace(/\\$__timeFrom\\(([\\w_.]+)\\)/g, fromRange);\n    q = q.replace(/\\$__timeTo\\(([\\w_.]+)\\)/g, toRange);\n    q = q.replace(/\\$__millisTimeTo\\(([\\w_.]+)\\)/g, to);\n    q = q.replace(/\\$__millisTimeFrom\\(([\\w_.]+)\\)/g, from);\n    return q;\n  }\n\n  public replacetimeGroupAlias(q, alias: boolean, options) {\n    const res = BigQueryQuery._getInterval(q, alias);\n    const interval = res[0];\n    const mininterval = res[1];\n    if (!interval) {\n      return q;\n    }\n    const intervalStr = this.getIntervalStr(interval, mininterval, options);\n    if (alias) {\n      return q.replace(/\\$__timeGroupAlias\\(([\\w_.]+,+[a-zA-Z0-9_ ]+.*\\))/g, intervalStr);\n    } else {\n      return q.replace(/\\$__timeGroup\\(([\\w_.]+,+[a-zA-Z0-9_ ]+.*\\))/g, intervalStr);\n    }\n  }\n\n  private _dateToTimestamp() {\n    if (this.target.timeColumnType === 'DATE') {\n      return 'Timestamp(' + BigQueryQuery.quoteFiledName(this.target.timeColumn) + ')';\n    }\n    return BigQueryQuery.quoteFiledName(this.target.timeColumn);\n  }\n  private _calcAutoInterval(options) {\n    const seconds = (this.templateSrv.timeRange.to._d - this.templateSrv.timeRange.from._d) / 1000;\n    return Math.ceil(seconds / options.maxDataPoints) + 's';\n  }\n  private _getDateRangePart(part) {\n    if (this.target.timeColumnType === 'DATE') {\n      return \"'\" + BigQueryQuery.formatDateToString(part, '-') + \"'\";\n    } else if (this.target.timeColumnType === 'DATETIME') {\n      return \"'\" + BigQueryQuery.formatDateToString(part, '-', true) + \"'\";\n    } else {\n      return 'TIMESTAMP_MILLIS (' + part.valueOf().toString() + ')';\n    }\n  }\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n","import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import _ from 'lodash';\nimport { each } from 'lodash-es';\n\n// API interfaces\nexport interface IResultFormat {\n  text: string;\n  value: string;\n}\n\nexport interface IDataTarget {\n  target: string;\n  datapoints: any[];\n  refId: string;\n  query: any;\n}\n\nexport default class ResponseParser {\n  public static parseProjects(results): IResultFormat[] {\n    return ResponseParser.parseData(results, 'id', 'id');\n  }\n\n  public static parseDatasets(results): IResultFormat[] {\n    return ResponseParser.parseData(results, 'datasetReference.datasetId', 'datasetReference.datasetId');\n  }\n\n  public static parseTableFields(results, filter): IResultFormat[] {\n    const fields: IResultFormat[] = [];\n    if (!results || results.length === 0) {\n      return fields;\n    }\n    const res = [];\n    results = ResponseParser._handleRecordFields(results, res);\n    for (const fl of results) {\n      if (filter.length > 0) {\n        for (const flt of filter) {\n          if (flt === fl.type) {\n            fields.push({\n              text: fl.name,\n              value: fl.type,\n            });\n          }\n        }\n      } else {\n        fields.push({\n          text: fl.name,\n          value: fl.type,\n        });\n      }\n    }\n    return fields;\n  }\n\n  public static parseDataQuery(results, format) {\n    if (!results.rows) {\n      return [ { data: [] }];\n    }\n    let res = null;\n    if (format === 'time_series') {\n      res = ResponseParser._toTimeSeries(results);\n    }\n    if (format === 'table') {\n      res = ResponseParser._toTable(results);\n    }\n    if (format === 'var') {\n      res = ResponseParser._toVar(results);\n    }\n    if (res === null) {\n      res = [];\n    }\n    return res;\n  }\n\n  public static _convertValues(value, type) {\n    if (['INT64', 'NUMERIC', 'FLOAT64', 'FLOAT', 'INT', 'INTEGER'].includes(type)) {\n      return Number(value);\n    }\n    if (['TIMESTAMP'].includes(type)) {\n      return new Date(Number(value) * 1000).toString();\n    }\n    //  No casting is required for types: DATE, DATETIME, TIME\n    return value;\n  }\n\n  private static parseData(results, text, value): IResultFormat[] {\n    const data: IResultFormat[] = [];\n    if (!results || results.length === 0) {\n      return data;\n    }\n    const objectTextList = text.split('.');\n    const objectValueList = value.split('.');\n    let itemValue;\n    let itemText;\n    for (let item of results) {\n      item = ResponseParser.manipulateItem(item);\n      itemText = item[objectTextList[0]];\n      itemValue = item[objectValueList[0]];\n      for (let i = 1; i < objectTextList.length; i++) {\n        itemText = itemText[objectTextList[i]];\n      }\n      for (let i = 1; i < objectValueList.length; i++) {\n        itemValue = itemValue[objectValueList[i]];\n      }\n\n      data.push({ text: itemText, value: itemValue });\n    }\n    return data;\n  }\n\n  private static manipulateItem(item) {\n    if (item.kind === 'bigquery#table' && item.timePartitioning) {\n      item.tableReference.tableId = item.tableReference.tableId + '__partitioned';\n      if (item.timePartitioning.field) {\n        item.tableReference.tableId += '__' + item.timePartitioning.field;\n      }\n    }\n    return item;\n  }\n\n  private static _handleRecordFields(results, res) {\n    for (const fl of results) {\n      if (fl.type === 'RECORD') {\n        for (const f of fl.fields) {\n          if (f.type !== 'RECORD') {\n            res.push({ name: fl.name + '.' + f.name, type: f.type });\n          } else {\n            for (const ff of f.fields) {\n              ff.name = fl.name + '.' + f.name + '.' + ff.name;\n            }\n            res = ResponseParser._handleRecordFields(f.fields, res);\n          }\n        }\n      } else {\n        res.push({ name: fl.name, type: fl.type });\n      }\n    }\n    return res;\n  }\n  private static _toTimeSeries(results) {\n    let timeIndex = -1;\n    let metricIndex = -1;\n    const valueIndexes = [];\n    for (let i = 0; i < results.schema.fields.length; i++) {\n      if (timeIndex === -1 && ['DATE', 'TIMESTAMP', 'DATETIME'].includes(results.schema.fields[i].type)) {\n        timeIndex = i;\n      }\n      if (metricIndex === -1 && results.schema.fields[i].name === 'metric') {\n        metricIndex = i;\n      }\n      if (['INT64', 'NUMERIC', 'FLOAT64', 'FLOAT', 'INT', 'INTEGER'].includes(results.schema.fields[i].type)) {\n        valueIndexes.push(i);\n      }\n    }\n    if (timeIndex === -1) {\n      throw new Error('No datetime column found in the result. The Time Series format requires a time column.');\n    }\n    return ResponseParser._buildDataPoints(results, timeIndex, metricIndex, valueIndexes);\n  }\n\n  private static _buildDataPoints(results, timeIndex, metricIndex, valueIndexes) {\n    const data = [];\n    let targetName = '';\n    let metricName = '';\n    let i;\n    for (const row of results.rows) {\n      if (row) {\n        for (i = 0; i < valueIndexes.length; i++) {\n          const epoch = Number(row.f[timeIndex].v) * 1000;\n          const valueIndexName = results.schema.fields[valueIndexes[i]].name;\n          targetName = metricIndex > -1 ? row.f[metricIndex].v.concat(' ', valueIndexName) : valueIndexName;\n          metricName = metricIndex > -1 ? row.f[metricIndex].v : valueIndexName;\n          if (metricIndex > -1 && valueIndexes.length === 1) {\n            targetName = metricName;\n          }\n          const bucket = ResponseParser.findOrCreateBucket(data, targetName, metricName);\n          const value = row.f[valueIndexes[i]].v === null ? null : Number(row.f[valueIndexes[i]].v)\n          bucket.datapoints.push([value, epoch]);\n        }\n      }\n    }\n    return data;\n  }\n\n  private static findOrCreateBucket(data, target, metric): IDataTarget {\n    let dataTarget = _.find(data, ['target', target]);\n    if (!dataTarget) {\n      dataTarget = { target, datapoints: [], refId: metric, query: '' };\n      data.push(dataTarget);\n    }\n\n    return dataTarget;\n  }\n\n  private static _toTable(results) {\n    const columns = [];\n    for (const fl of results.schema.fields) {\n      columns.push({\n        text: fl.name,\n        type: fl.type,\n      });\n    }\n    const rows = [];\n    each(results.rows, ser => {\n      const r = [];\n      each(ser, v => {\n        for (let i = 0; i < v.length; i++) {\n          const val = v[i].v ? ResponseParser._convertValues(v[i].v, columns[i].type) : '';\n          r.push(val);\n        }\n      });\n      rows.push(r);\n    });\n    return {\n      columns,\n      rows,\n      type: 'table',\n    };\n  }\n\n  private static _toVar(results) {\n    const res = [];\n    for (const row of results.rows) {\n      res.push(row.f[0].v);\n    }\n\n    return _.map(res, value => {\n      return { text: value };\n    });\n  }\n\n  constructor(private $q) {}\n\n  public parseTabels(results): IResultFormat[] {\n    return this._handelWildCardTables(\n      ResponseParser.parseData(results, 'tableReference.tableId', 'tableReference.tableId')\n    );\n  }\n\n  public transformAnnotationResponse(options, data) {\n    const table = data.data;\n    let timeColumnIndex = -1;\n    let textColumnIndex = -1;\n    let tagsColumnIndex = -1;\n    for (let i = 0; i < data.data.schema.fields.length; i++) {\n      if (data.data.schema.fields[i].name === 'time') {\n        timeColumnIndex = i;\n      } else if (data.data.schema.fields[i].name === 'text') {\n        textColumnIndex = i;\n      } else if (data.data.schema.fields[i].name === 'tags') {\n        tagsColumnIndex = i;\n      }\n    }\n    if (timeColumnIndex === -1) {\n      return this.$q.reject({\n        message: 'Missing mandatory time column in annotation query.',\n      });\n    }\n    const list = [];\n    if (table.rows && table.rows.length) {\n      for (const row of table.rows) {\n        list.push({\n          annotation: options.annotation,\n          tags: row.f[tagsColumnIndex].v ? row.f[tagsColumnIndex].v.trim().split(/\\s*,\\s*/) : [],\n          text: row.f[textColumnIndex].v ? row.f[textColumnIndex].v.toString() : '',\n          time: Number(Math.floor(Number(row.f[timeColumnIndex].v))) * 1000,\n        });\n      }\n    }\n    return list;\n  }\n  private _handelWildCardTables(tables) {\n    let sorted = new Map();\n    let newTables = [];\n    for (const t of tables) {\n      const partitioned = t.text.indexOf('__partitioned');\n      if (partitioned > -1) {\n        t.text = t.text.substring(0, partitioned);\n      }\n      if (\n        !t.value.match(\n          /_(?:(?:20\\d{2})(?:(?:(?:0[13578]|1[02])31)|(?:(?:0[1,3-9]|1[0-2])(?:29|30)))|(?:(?:20(?:0[48]|[2468][048]|[13579][26]))0229)|(?:20\\d{2})(?:(?:0?[1-9])|(?:1[0-2]))(?:0?[1-9]|1\\d|2[0-8]))(?!\\d)$/g\n        )\n      ) {\n        sorted = sorted.set(t.value, t.text);\n      } else {\n        sorted.set(\n          t.text.substring(0, t.text.length - 8) + 'YYYYMMDD',\n          t.text.substring(0, t.text.length - 8) + 'YYYYMMDD'\n        );\n      }\n    }\n    sorted.forEach((text, value) => {\n      newTables = newTables.concat({ text, value });\n    });\n    return newTables;\n  }\n}\n","export default class SqlParser {\n    public static getProjectDatasetTableFromSql = (sqlCode: string) => {\n        try {\n            const FULL_JOB_ID = SqlParser.getFullJobId(sqlCode);\n            const DATASET = SqlParser.getDatasetId(FULL_JOB_ID);\n            const PROJECT = SqlParser.getProjectIdFromFullId(FULL_JOB_ID);\n            const TABLE = SqlParser.getTableId(FULL_JOB_ID);\n\n            return [PROJECT, DATASET, TABLE];\n        } catch (e) {\n            console.log(`ERROR: getProjectDatasetTableFromSql, error: ${JSON.stringify(e)}`);\n            return [];\n        }\n    };\n\n    private static getFullJobId = (sqlCode: string) => {\n        let fullJobId = ``;\n        if (sqlCode) {\n            const jobIdRegExp = /from\\s{0,}[\\S]{1,}|from\\s[\\S]{2,}/ig;\n            let matchId = sqlCode.match(jobIdRegExp);\n\n            if (matchId && Array.isArray(matchId)) { //The from part\n                matchId.forEach(match => {\n                    fullJobId = match.replace(/from|\\n|;/ig, \" \").trim(); //remove from, newlines, spaces & ;\n                    if (fullJobId.match(/`|\\[|\\.|:/)) {\n                        fullJobId = fullJobId.replace(/`|\\[|\\]/g, \"\");\n                    }\n                })\n            }\n        }\n        return fullJobId;\n    };\n\n    private static getDatasetId = (fullStringId: string) => {\n        const tableIdObj = SqlParser.isStandardSql(fullStringId);\n        let datasetId = '';\n        if (!tableIdObj.isStandard) {//if is legacy\n            let colonSplit = fullStringId.split(':');\n            let dotsCount = colonSplit.length;\n            datasetId = colonSplit[dotsCount - 1].split('.')[0]\n        }\n        else {\n            //proj:e.ct.dataset.table\n            let dotsSplit = fullStringId.split('.');\n            let dotsCount = dotsSplit.length;\n            if (dotsCount > 2) {\n                datasetId = dotsSplit[dotsCount - 2];\n            } else { //might be proxy \"use\"\n                datasetId = dotsSplit[dotsCount - 1];\n            }\n            if (fullStringId.toLowerCase().includes('.information_schema')) {\n                if (dotsCount === 4) {\n                    datasetId = dotsSplit[1];\n                }\n                if (dotsCount === 3) {\n                    datasetId = dotsSplit[0];\n                }\n            }\n        }\n        datasetId = datasetId.replace(/`|\\[|\\]/g, '');\n        return datasetId;\n    };\n\n    private static isStandardSql = (idString: string) => {\n        let isStandard, fullId, partialId, projectId = '';\n        // This 'if' checks if the provided idString is of type standard and makes sure there is only one ':' in the expression (as in legacy syntax)\n        const splitted = idString.split(/[:.]|:\\./g);\n        if (splitted.length > 3) {\n            const __ret = SqlParser.try2findProjectId(idString, projectId);\n            idString = __ret.idString;\n            projectId = __ret.projectId;\n        }\n        if ((idString.match(/:/g))) {\n            // Regex that checks if the format of the id match legacy\n            let matched = idString.match(/([\\[]([^[]|[\\[][\\]])*[\\]])|[:.]/g);\n            if (matched && matched[0]) {\n                if (matched[0] === \":\" && matched[1] === \".\") {\n                    fullId = idString;//.replace(/:/, '.');\n                } else {\n                    fullId = projectId + matched[0].substring(1, idString.length - 1);\n                }\n                isStandard = false;\n            } else {\n                SqlParser.errorMessage(\"First Regex\", idString, \"\");\n            }\n            // Same as the first only that here instead of ':' we are looking for '.' and we want to make sure there is more than 1 (as in standard syntax)\n        } else if ((idString.match(/\\./g) && idString.match(/\\./g).length === 2)) {\n            // Regex that checks if the format of the id match standard\n            let matched = idString.match(/(`([^`]|``)*`)/g);// ? idString.match(/(`([^`]|``)*`)/g) : [idString];\n            if (matched && matched[0]) {\n                fullId = projectId + matched[0].substring(1, idString.length - 1);\n                isStandard = true\n            } else if (!matched && idString) {\n                fullId = projectId + idString;\n                isStandard = true;\n            }\n            else {\n                SqlParser.errorMessage(\"Second Regex\", idString, \"\");\n            }\n        }\n        else {//projectID.dataset\n            // In case of id without projectId of proxy \"use\" project.dataset\n            if (splitted.length === 2) {\n                fullId = '';\n                if (idString[0] === '[' && idString[idString.length - 1] === ']') {\n                    isStandard = false;\n                }\n                else if (idString[0] === '`' && idString[idString.length - 1] === '`') {\n                    isStandard = true;\n                }\n                partialId = idString.replace(/`|\\[|\\]/g, '')\n            }\n        }\n        // Return values is flag the determine the type (standard or legacy) and id without staring/ ending chars (``, [])\n        return {\n            isStandard,\n            fullId: fullId,\n            partialId: partialId\n        };\n    }\n\n    private static try2findProjectId = (idString: string, projectId: string) => {\n        let numOfInstances = 0;\n        for (let i = idString.length; i > 0; i--) {\n            const char = idString[i - 1];\n            if (char === ':' || char === '.') {\n                numOfInstances++;\n                if (numOfInstances === 2) {\n                    projectId = idString[0] === `\\`` ? idString.substring(1, i - 1) : idString.substring(0, i - 1);\n                    idString = idString.substring(i - 1, idString.length);\n                    idString = idString[idString.length - 1] === '`' ? '`' + idString : idString;\n                    idString = idString[idString.length - 1] === ']' ? '[' + idString : idString;\n                }\n            }\n        }\n        return { idString, projectId };\n    };\n\n    private static errorMessage = (location: string, idString: string, message: string) => {\n        const MESSAGE = message ? message : `Id is not valid and not related to either legacy nor standard. id:`;\n        throw (`${location} ${MESSAGE} ${idString}`);\n    };\n\n    private static getProjectIdFromFullId = (fullStringId: string) => {\n        if (fullStringId === undefined || fullStringId.length === 0) {\n            return ''\n        }\n        let projectFound;\n        const splittedProject = fullStringId.split(/[.:]/g);\n        if (splittedProject.length > 3) {\n            let numOfInstances = 0;\n            for (let i = fullStringId.length; i > 0; i--) {\n                const char = fullStringId[i - 1];\n                if (char === '.' || char === ':') {\n                    numOfInstances++;\n                    if (numOfInstances === 2) {\n                        projectFound = fullStringId.substring(0, i - 1).replace(/[[`]/g, '');\n                        if (fullStringId.toLowerCase().includes('.information_schema')) {\n                            projectFound = splittedProject[0];\n                        }\n                    }\n                }\n            }\n        } else {\n            if (!fullStringId.toLowerCase().includes('.information_schema')) {\n                projectFound = splittedProject[0].replace(/[[`]/g, '');\n            }\n        }\n        return projectFound;\n    };\n\n    private static getTableId = (fullStringId: string) => {\n        const tableIdObj = SqlParser.isStandardSql(fullStringId);\n        let table = tableIdObj.fullId;\n        if (tableIdObj.fullId && tableIdObj.fullId.toString().indexOf('.') > -1) {\n            const splittedId = tableIdObj.fullId.split('.');\n            if (tableIdObj.fullId.toLowerCase().includes('.information_schema')) {\n                table = `${splittedId[splittedId.length - 2]}.${splittedId[splittedId.length - 1]}`;\n            } else {\n                table = splittedId[splittedId.length - 1];\n            }\n        }\n        else if (tableIdObj.partialId && tableIdObj.partialId.indexOf('.') > -1) {\n            const splittedId = tableIdObj.partialId.split('.');\n            table = splittedId[splittedId.length - 1];\n        }\n        return table;\n    };\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import _ from 'lodash';\nimport moment from 'moment';\nimport BigQueryQuery from './bigquery_query';\nimport ResponseParser, { IResultFormat } from './response_parser';\nimport SqlParser from './sql_parser';\nimport { v4 as generateID } from 'uuid';\n\nconst Shifted = '_shifted';\nfunction sleep(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport class BigQueryDatasource {\n  public static formatBigqueryError(error) {\n    let message = 'BigQuery: ';\n    let status = '';\n    let data = '';\n    if (error !== undefined) {\n      message += error.message ? error.message : 'Cannot connect to BigQuery API';\n      status = error.code;\n      data = error.errors[0].reason + ': ' + error.message;\n    }\n    return {\n      data: {\n        message: data,\n      },\n      status,\n      statusText: message,\n    };\n  }\n\n  public static _getShiftPeriod(strInterval) {\n    const shift = strInterval.match(/\\d+/)[0];\n    strInterval = strInterval.substr(shift.length, strInterval.length);\n\n    if (strInterval.trim() === 'min') {\n      strInterval = 'm';\n    }\n    return [strInterval, shift];\n  }\n\n  public static _extractFromClause(sql: string) {\n    return SqlParser.getProjectDatasetTableFromSql(sql);\n  }\n\n  public static _FindTimeField(sql, timeFields) {\n    const select = sql.search(/select/i);\n    const from = sql.search(/from/i);\n    const fields = sql.substring(select + 6, from);\n    const splitFrom = fields.split(',');\n    let col;\n    for (let i = 0; i < splitFrom.length; i++) {\n      let field = splitFrom[i].search(/ AS /i);\n      if (field === -1) {\n        field = splitFrom[i].length;\n      }\n      col = splitFrom[i]\n        .substring(0, field)\n        .trim()\n        .replace('`', '')\n        .replace('`', '');\n      col = col.replace(/\\$__timeGroupAlias\\(/g, '');\n      col = col.replace(/\\$__timeGroup\\(/g, '');\n      col = col.replace(/\\$__timeFilter\\(/g, '');\n      col = col.replace(/\\$__timeFrom\\(/g, '');\n      col = col.replace(/\\$__timeTo\\(/g, '');\n      col = col.replace(/\\$__millisTimeTo\\(/g, '');\n      col = col.replace(/\\$__millisTimeFrom\\(/g, '');\n      for (const fl of timeFields) {\n        if (fl.text === col) {\n          return fl;\n        }\n      }\n    }\n    return null;\n  }\n  private static _handleError(error) {\n    if (error.cancelled === true) {\n      return [];\n    }\n    let msg = error;\n    if (error.data !== undefined) {\n      msg = error.data.error;\n    }\n    throw BigQueryDatasource.formatBigqueryError(msg);\n  }\n  private static _createTimeShiftQuery(query) {\n    const res = BigQueryQuery.getTimeShift(query.rawSql);\n    if (!res) {\n      return res;\n    }\n    const copy = query.constructor();\n    for (const attr in query) {\n      if (query.hasOwnProperty(attr)) {\n        copy[attr] = query[attr];\n      }\n    }\n    copy.rawSql = BigQueryQuery.replaceTimeShift(copy.rawSql);\n    copy.format += '#' + res;\n    copy.refId += Shifted + '_' + res;\n    return copy;\n  }\n\n  private static _setupTimeShiftQuery(query, options) {\n    const index = query.format.indexOf('#');\n    const copy = options.constructor();\n    for (const attr in options) {\n      if (options.hasOwnProperty(attr)) {\n        copy[attr] = options[attr];\n      }\n    }\n    if (index === -1) {\n      return copy;\n    }\n    let strInterval = query.format.substr(index + 1, query.format.len);\n    const res = BigQueryDatasource._getShiftPeriod(strInterval);\n    strInterval = res[0];\n    if (!['s', 'min', 'h', 'd', 'w', 'm', 'w', 'y', 'M'].includes(strInterval)) {\n      return copy;\n    }\n    query.format = query.format.substr(0, index);\n    strInterval = res[0];\n    const shift = res[1];\n\n    if (strInterval === 'min') {\n      strInterval = 'm';\n    }\n    copy.range.from = options.range.from.subtract(parseInt(shift, 10), strInterval);\n    copy.range.to = options.range.to.subtract(parseInt(shift, 10), strInterval);\n    return copy;\n  }\n\n  private static _updatePartition(q, options) {\n    if (q.indexOf('AND _PARTITIONTIME >= ') < 1) {\n      return q;\n    }\n    if (q.indexOf('AND _PARTITIONTIME <') < 1) {\n      return q;\n    }\n    const from = q.substr(q.indexOf('AND _PARTITIONTIME >= ') + 22, 21);\n\n    const newFrom = \"'\" + BigQueryQuery.formatDateToString(options.range.from._d, '-', true) + \"'\";\n    q = q.replace(from, newFrom);\n    const to = q.substr(q.indexOf('AND _PARTITIONTIME < ') + 21, 21);\n    const newTo = \"'\" + BigQueryQuery.formatDateToString(options.range.to._d, '-', true) + \"'\";\n\n    q = q.replace(to, newTo) + '\\n ';\n    return q;\n  }\n\n  private static _updateTableSuffix(q, options) {\n    const ind = q.indexOf('AND  _TABLE_SUFFIX BETWEEN ');\n    if (ind < 1) {\n      return q;\n    }\n    const from = q.substr(ind + 28, 8);\n\n    const newFrom = BigQueryQuery.formatDateToString(options.range.from._d);\n    q = q.replace(from, newFrom);\n    const to = q.substr(ind + 43, 8);\n    const newTo = BigQueryQuery.formatDateToString(options.range.to._d);\n    q = q.replace(to, newTo) + '\\n ';\n    return q;\n  }\n  public authenticationType: string;\n  public projectName: string;\n  private readonly id: any;\n  private jsonData: any;\n  private responseParser: ResponseParser;\n  private queryModel: BigQueryQuery;\n  private readonly baseUrl: string;\n  private readonly url: string;\n  private runInProject: string;\n  private processingLocation: string;\n  private queryPriority: string;\n\n  /** @ngInject */\n  constructor(instanceSettings, private backendSrv, private $q, private templateSrv) {\n    this.id = instanceSettings.id;\n    this.jsonData = instanceSettings.jsonData;\n    this.responseParser = new ResponseParser(this.$q);\n    this.queryModel = new BigQueryQuery({});\n    this.baseUrl = `/bigquery/`;\n    this.url = instanceSettings.url;\n    this.authenticationType = instanceSettings.jsonData.authenticationType || 'jwt';\n    (async () => {\n      this.projectName = instanceSettings.jsonData.defaultProject || (await this.getDefaultProject());\n    })();\n    this.runInProject =\n      this.jsonData.flatRateProject && this.jsonData.flatRateProject.length\n        ? this.jsonData.flatRateProject\n        : this.projectName;\n    this.processingLocation =\n      this.jsonData.processingLocation && this.jsonData.processingLocation.length\n        ? this.jsonData.processingLocation\n        : undefined;\n    this.queryPriority = this.jsonData.queryPriority;\n  }\n\n  public async query(options) {\n    const queries = _.filter(options.targets, target => {\n      return target.hide !== true;\n    }).map(target => {\n      const queryModel = new BigQueryQuery(target, this.templateSrv, options.scopedVars);\n      this.queryModel = queryModel;\n      return {\n        queryPriority: this.queryPriority,\n        datasourceId: this.id,\n        format: target.format,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        metricColumn: target.metricColumn,\n        partitioned: target.partitioned,\n        partitionedField: target.partitionedField,\n        rawSql: queryModel.render(this.interpolateVariable),\n        refId: target.refId,\n        sharded: target.sharded,\n        table: target.table,\n        timeColumn: target.timeColumn,\n        timeColumnType: target.timeColumnType,\n      };\n    });\n\n    if (queries.length === 0) {\n      return this.$q.when({ data: [] });\n    }\n    _.map(queries, query => {\n      const newQuery = BigQueryDatasource._createTimeShiftQuery(query);\n      if (newQuery) {\n        queries.push(newQuery);\n      }\n    });\n    let modOptions;\n    const allQueryPromise = _.map(queries, query => {\n      const tmpQ = this.queryModel.target.rawSql;\n      if (this.queryModel.target.rawQuery === false) {\n        this.queryModel.target.metricColumn = query.metricColumn;\n        this.queryModel.target.partitioned = query.partitioned;\n        this.queryModel.target.partitionedField = query.partitionedField;\n        this.queryModel.target.rawSql = query.rawSql;\n        this.queryModel.target.sharded = query.sharded;\n        this.queryModel.target.table = query.table;\n        this.queryModel.target.timeColumn = query.timeColumn;\n        this.queryModel.target.timeColumnType = query.timeColumnType;\n        modOptions = BigQueryDatasource._setupTimeShiftQuery(query, options);\n        const q = this.setUpQ(modOptions, options, query);\n        console.log(q);\n        this.queryModel.target.rawSql = q;\n        return this.doQuery(q, options.panelId + query.refId, query.queryPriority).then(response => {\n          return ResponseParser.parseDataQuery(response, query.format);\n        });\n      } else {\n        // Fix raw sql\n        const sqlWithNoVariables = this.templateSrv.replace(tmpQ, options.scopedVars, this.interpolateVariable);\n        const [project, dataset, table] = BigQueryDatasource._extractFromClause(sqlWithNoVariables);\n        this.getDateFields(project, dataset, table)\n          .then(dateFields => {\n            const tm = BigQueryDatasource._FindTimeField(tmpQ, dateFields);\n            this.queryModel.target.timeColumn = tm.text;\n            this.queryModel.target.timeColumnType = tm.value;\n            this.queryModel.target.table = table;\n          })\n          .catch(err => {\n            console.log(err);\n          });\n        this.queryModel.target.rawSql = query.rawSql;\n        modOptions = BigQueryDatasource._setupTimeShiftQuery(query, options);\n        const q = this.setUpQ(modOptions, options, query);\n        console.log(q);\n        return this.doQuery(q, options.panelId + query.refId, query.queryPriority).then(response => {\n          return ResponseParser.parseDataQuery(response, query.format);\n        });\n      }\n    });\n    return this.$q.all(allQueryPromise).then((responses): any => {\n      const data = [];\n      if (responses) {\n        for (const response of responses) {\n          if (response.type && response.type === 'table') {\n            data.push(response);\n          } else {\n            for (const dp of response) {\n              data.push(dp);\n            }\n          }\n        }\n      }\n      for (const d of data) {\n        if (typeof d.target !== 'undefined' && d.target.search(Shifted) > -1) {\n          const res = BigQueryDatasource._getShiftPeriod(\n            d.target.substring(d.target.lastIndexOf('_') + 1, d.target.length)\n          );\n          const shiftPeriod = res[0];\n          const shiftVal = res[1];\n          for (let i = 0; i < d.datapoints.length; i++) {\n            d.datapoints[i][1] = moment(d.datapoints[i][1])\n              .subtract(shiftVal, shiftPeriod)\n              .valueOf();\n          }\n        }\n      }\n      return { data };\n    });\n  }\n\n  public metricFindQuery(query, optionalOptions) {\n    let refId = 'tempvar';\n    if (optionalOptions && optionalOptions.variable && optionalOptions.variable.name) {\n      refId = optionalOptions.variable.name;\n    }\n    const interpolatedQuery = {\n      datasourceId: this.id,\n      format: 'table',\n      rawSql: this.templateSrv.replace(query, {}, this.interpolateVariable),\n      refId,\n    };\n    return this.doQuery(interpolatedQuery.rawSql, refId, query.queryPriority).then(metricData =>\n      ResponseParser.parseDataQuery(metricData, 'var')\n    );\n  }\n  public async testDatasource() {\n    let status = 'success';\n    let message = 'Successfully queried the BigQuery API.';\n    const defaultErrorMessage = 'Cannot connect to BigQuery API';\n    if (!this.projectName) {\n      try {\n        await this.getDefaultProject();\n      } catch (error) {\n        message = error.statusText ? error.statusText : defaultErrorMessage;\n      }\n    }\n    try {\n      const path = `v2/projects/${this.projectName}/datasets`;\n      const response = await this.doRequest(`${this.baseUrl}${path}`);\n      if (response.status !== 200) {\n        status = 'error';\n        message = response.statusText ? response.statusText : defaultErrorMessage;\n      }\n    } catch (error) {\n      message = error.statusText ? error.statusText : defaultErrorMessage;\n    }\n    try {\n      const path = `v2/projects/${this.projectName}/jobs/no-such-jobs`;\n      const response = await this.doRequest(`${this.baseUrl}${path}`);\n      if (response.status !== 200) {\n        status = 'error';\n        message = response.statusText ? response.statusText : defaultErrorMessage;\n      }\n    } catch (error) {\n      if (error.status !== 404) {\n        message = error.statusText ? error.statusText : defaultErrorMessage;\n      }\n    }\n    return {\n      message,\n      status,\n    };\n  }\n\n  public async getProjects(): Promise<IResultFormat[]> {\n    const path = `v2/projects`;\n    const data = await this.paginatedResults(path, 'projects');\n    return ResponseParser.parseProjects(data);\n  }\n\n  public async getDatasets(projectName): Promise<IResultFormat[]> {\n    const path = `v2/projects/${projectName}/datasets`;\n    const data = await this.paginatedResults(path, 'datasets');\n    return ResponseParser.parseDatasets(data);\n  }\n\n  public async getTables(projectName: string, datasetName: string): Promise<IResultFormat[]> {\n    const path = `v2/projects/${projectName}/datasets/${datasetName}/tables`;\n    const data = await this.paginatedResults(path, 'tables');\n    return new ResponseParser(this.$q).parseTabels(data);\n  }\n\n  public async getTableFields(\n    projectName: string,\n    datasetName: string,\n    tableName: string,\n    filter\n  ): Promise<IResultFormat[]> {\n    const path = `v2/projects/${projectName}/datasets/${datasetName}/tables/${tableName}`;\n    const data = await this.paginatedResults(path, 'schema.fields');\n    return ResponseParser.parseTableFields(data, filter);\n  }\n\n  public async getDateFields(projectName: string, datasetName: string, tableName: string) {\n    return this.getTableFields(projectName, datasetName, tableName, ['DATE', 'TIMESTAMP', 'DATETIME']);\n  }\n  public async getDefaultProject() {\n    try {\n      if (this.authenticationType === 'gce' || !this.projectName) {\n        const data = await this.getProjects();\n        this.projectName = data[0].value;\n        if (!this.runInProject) {\n          this.runInProject = this.projectName;\n        }\n        return data[0].value;\n      } else {\n        return this.projectName;\n      }\n    } catch (error) {\n      return (this.projectName = '');\n    }\n  }\n\n  public annotationQuery(options) {\n    const path = `v2/projects/${this.runInProject}/queries`;\n    const url = this.url + `${this.baseUrl}${path}`;\n    if (!options.annotation.rawQuery) {\n      return this.$q.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n    const rawSql = this.templateSrv.replace(options.annotation.rawQuery, options.scopedVars, this.interpolateVariable);\n\n    const query = {\n      datasourceId: this.id,\n      format: 'table',\n      rawSql,\n      refId: options.annotation.name,\n    };\n    this.queryModel.target.rawSql = query.rawSql;\n    query.rawSql = this.queryModel.expend_macros(options);\n    return this.backendSrv\n      .datasourceRequest({\n        data: {\n          priority: this.queryPriority,\n          from: options.range.from.valueOf().toString(),\n          query: query.rawSql,\n          to: options.range.to.valueOf().toString(),\n          useLegacySql: false,\n          useQueryCache: true,\n        },\n        method: 'POST',\n        requestId: options.annotation.name,\n        url,\n      })\n      .then(data => this.responseParser.transformAnnotationResponse(options, data));\n  }\n  private setUpQ(modOptions, options, query) {\n    let q = this.queryModel.expend_macros(modOptions);\n    if (q) {\n      q = this.setUpPartition(q, query.partitioned, query.partitionedField, modOptions);\n      q = BigQueryDatasource._updatePartition(q, modOptions);\n      q = BigQueryDatasource._updateTableSuffix(q, modOptions);\n      if (query.refId.search(Shifted) > -1) {\n        q = this._updateAlias(q, modOptions, query.refId);\n      }\n      const limit = q.match(/[^]+(\\bLIMIT\\b)/gi);\n      if (limit == null) {\n        const limitStatement = ' LIMIT ' + options.maxDataPoints;\n        const limitPosition = q.match(/\\$__limitPosition/g);\n        if (limitPosition !== null) {\n          q = q.replace(/\\$__limitPosition/g, limitStatement);\n        } else {\n          q += limitStatement;\n        }\n      }\n    }\n    return q;\n  }\n  /**\n   * Add partition to query unless it has one\n   * @param query\n   * @param isPartitioned\n   * @param partitionedField\n   * @param options\n   */\n  private setUpPartition(query, isPartitioned, partitionedField, options) {\n    partitionedField = partitionedField ? partitionedField : '_PARTITIONTIME';\n    if (isPartitioned && !query.match(new RegExp(partitionedField, 'i'))) {\n      const fromD = BigQueryQuery.convertToUtc(options.range.from._d);\n      const toD = BigQueryQuery.convertToUtc(options.range.to._d);\n      const from = `${partitionedField} >= '${BigQueryQuery.formatDateToString(fromD, '-', true)}'`;\n      const to = `${partitionedField} < '${BigQueryQuery.formatDateToString(toD, '-', true)}'`;\n      const partition = `where ${from} AND ${to} AND `;\n      if (query.match(/where/i)) query = query.replace(/where/i, partition);\n      else {\n        const reg = /from ('|`|\"|){1}(.*?)('|`|\"|){1} as ('|`|\"|)(\\S*)('|`|\"|){1}|from ('|`|\"|){1}(\\S*)('|`|\"|){1}/i;\n        const fromMatch = query.match(reg);\n        query = query.replace(reg, `${fromMatch} ${fromMatch}`);\n      }\n    }\n    return query;\n  }\n  private async doRequest(url, requestId = 'requestId', maxRetries = 3) {\n    return this.backendSrv\n      .datasourceRequest({\n        method: 'GET',\n        requestId: generateID(),\n        url: this.url + url,\n      })\n      .then(result => {\n        if (result.status !== 200) {\n          if (result.status >= 500 && maxRetries > 0) {\n            return this.doRequest(url, requestId, maxRetries - 1);\n          }\n          throw BigQueryDatasource.formatBigqueryError(result.data.error);\n        }\n        return result;\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doRequest(url, requestId, maxRetries - 1);\n        }\n        if (error.cancelled === true) {\n          return [];\n        }\n        return BigQueryDatasource._handleError(error);\n      });\n  }\n\n  private async doQueryRequest(query, requestId, priority, maxRetries = 3) {\n    const location = this.queryModel.target.location || this.processingLocation || 'US';\n    let data,\n      queryiesOrJobs = 'queries';\n    data = { priority: priority, location, query, useLegacySql: false, useQueryCache: true }; //ExternalDataConfiguration\n    if (priority.toUpperCase() === 'BATCH') {\n      queryiesOrJobs = 'jobs';\n      data = { configuration: { query: { query, priority } } };\n    }\n    const path = `v2/projects/${this.runInProject}/${queryiesOrJobs}`;\n    const url = this.url + `${this.baseUrl}${path}`;\n    return this.backendSrv\n      .datasourceRequest({\n        data: data,\n        method: 'POST',\n        requestId,\n        url,\n      })\n      .then(result => {\n        if (result.status !== 200) {\n          if (result.status >= 500 && maxRetries > 0) {\n            return this.doQueryRequest(query, requestId, priority, maxRetries - 1);\n          }\n          throw BigQueryDatasource.formatBigqueryError(result.data.error);\n        }\n        return result;\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doQueryRequest(query, requestId, priority, maxRetries - 1);\n        }\n        if (error.cancelled === true) {\n          return [];\n        }\n        return BigQueryDatasource._handleError(error);\n      });\n  }\n  private async _waitForJobComplete(queryResults, requestId, jobId) {\n    let sleepTimeMs = 100;\n    console.log('New job id: ', jobId);\n    const location = this.queryModel.target.location || this.processingLocation || 'US';\n    const path = `v2/projects/${this.runInProject}/queries/` + jobId + '?location=' + location;\n    while (!queryResults.data.jobComplete) {\n      await sleep(sleepTimeMs);\n      sleepTimeMs *= 2;\n      queryResults = await this.doRequest(`${this.baseUrl}${path}`, requestId);\n      console.log('wating for job to complete ', jobId);\n    }\n    console.log('Job Done ', jobId);\n    return queryResults;\n  }\n\n  private async _getQueryResults(queryResults, rows, requestId, jobId) {\n    while (queryResults.data.pageToken) {\n      const location = this.queryModel.target.location || this.processingLocation || 'US';\n      const path =\n        `v2/projects/${this.runInProject}/queries/` +\n        jobId +\n        '?pageToken=' +\n        queryResults.data.pageToken +\n        '&location=' +\n        location;\n      queryResults = await this.doRequest(`${this.baseUrl}${path}`, requestId);\n      if (queryResults.length === 0) {\n        return rows;\n      }\n      rows = rows.concat(queryResults.data.rows);\n      console.log('getting results for: ', jobId);\n    }\n    return rows;\n  }\n\n  private async doQuery(query, requestId, priority = 'INTERACTIVE') {\n    if (!query) {\n      return {\n        rows: null,\n        schema: null,\n      };\n    }\n    let notReady = false;\n    ['-- time --', '-- value --'].forEach(element => {\n      if (query.indexOf(element) !== -1) {\n        notReady = true;\n      }\n    });\n    if (notReady) {\n      return {\n        rows: null,\n        schema: null,\n      };\n    }\n    let queryResults = await this.doQueryRequest(\n      //\"tableDefinitions\": {\n      //   string: {\n      //     object (ExternalDataConfiguration)\n      //   },\n      //   ...\n      // },\n      query,\n      requestId,\n      priority\n    );\n    if (queryResults.length === 0) {\n      return {\n        rows: null,\n        schema: null,\n      };\n    }\n    const jobId = queryResults.data.jobReference.jobId;\n    queryResults = await this._waitForJobComplete(queryResults, requestId, jobId);\n    if (queryResults.length === 0) {\n      return {\n        rows: null,\n        schema: null,\n      };\n    }\n    let rows = queryResults.data.rows;\n    const schema = queryResults.data.schema;\n    rows = await this._getQueryResults(queryResults, rows, requestId, jobId);\n    return {\n      rows,\n      schema,\n    };\n  }\n\n  private interpolateVariable = (value, variable) => {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return BigQueryQuery.quoteLiteral(value);\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    const quotedValues = _.map(value, v => {\n      return BigQueryQuery.quoteLiteral(v);\n    });\n    return quotedValues.join(',');\n  };\n\n  private async paginatedResults(path, dataName) {\n    let queryResults = await this.doRequest(`${this.baseUrl}${path}`);\n    let data = queryResults.data;\n    if (!data) return data;\n    const dataList = dataName.split('.');\n    dataList.forEach(element => {\n      if (data && data[element]) data = data[element];\n    });\n    while (queryResults && queryResults.data && queryResults.data.nextPageToken) {\n      queryResults = await this.doRequest(`${this.baseUrl}${path}` + '?pageToken=' + queryResults.data.nextPageToken);\n      dataList.forEach(element => {\n        data = data.concat(queryResults.data[element]);\n      });\n    }\n    return data;\n  }\n  private _updateAlias(q, options, shiftstr) {\n    if (shiftstr !== undefined) {\n      const index = shiftstr.search(Shifted);\n      const shifted = shiftstr.substr(index, shiftstr.length);\n      for (const al of options.targets[0].select[0]) {\n        if (al.type === 'alias') {\n          q = q.replace('AS ' + al.params[0], 'AS ' + al.params[0] + shifted);\n          return q;\n        }\n      }\n      const aliasshiftted = [options.targets[0].select[0][0].params[0] + shifted];\n      const oldSelect = this.queryModel.buildValueColumn(options.targets[0].select[0]);\n      const newSelect = this.queryModel.buildValueColumn([\n        options.targets[0].select[0][0],\n        options.targets[0].select[0][1],\n        { type: 'alias', params: [aliasshiftted] },\n      ]);\n      q = q.replace(oldSelect, newSelect);\n    }\n    return q;\n  }\n}\n","import _ from 'lodash';\n\nexport class SqlPartDef {\n  type: string;\n  style: string;\n  label: string;\n  params: any[];\n  defaultParams: any[];\n  wrapOpen: string;\n  wrapClose: string;\n  separator: string;\n\n  constructor(options: any) {\n    this.type = options.type;\n    if (options.label) {\n      this.label = options.label;\n    } else {\n      this.label = this.type[0].toUpperCase() + this.type.substring(1) + ':';\n    }\n    \n    this.style = options.style;\n    if (this.style === 'function') {\n      this.wrapOpen = '(';\n      this.wrapClose = ')';\n      this.separator = ', ';\n    } else {\n      this.wrapOpen = ' ';\n      this.wrapClose = ' ';\n      this.separator = ' ';\n    }\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n  }\n}\n\nexport class SqlPart {\n  part: any;\n  def: SqlPartDef;\n  params: any[];\n  label: string;\n  name: string;\n  datatype: string;\n\n  constructor(part: any, def: any) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find sql part ' + part.type };\n    }\n\n    this.datatype = part.datatype;\n\n    if (part.name) {\n      this.name = part.name;\n      this.label = def.label + ' ' + part.name;\n    } else {\n      this.name = '';\n      this.label = def.label;\n    }\n\n    part.params = part.params || _.clone(this.def.defaultParams);\n    this.params = part.params;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n  }\n}\n\nconst index = [];\n\nfunction createPart(part): any {\n  const def = index[part.type];\n  if (!def) {\n    return null;\n  }\n\n  return new SqlPart(part, def);\n}\n\nfunction register(options: any) {\n  index[options.type] = new SqlPartDef(options);\n}\n\nregister({\n  defaultParams: ['value'],\n  params: [{ type: 'column', dynamicLookup: true }],\n  style: 'label',\n  type: 'column',\n});\n\nregister({\n  defaultParams: ['value', '=', 'value'],\n  label: 'Expr:',\n  params: [\n    { name: 'left', type: 'string', dynamicLookup: true },\n    { name: 'op', type: 'string', dynamicLookup: true },\n    { name: 'right', type: 'string', dynamicLookup: true },\n  ],\n  style: 'expression',\n  type: 'expression',\n});\n\nregister({\n  defaultParams: [],\n  label: 'Macro:',\n  params: [],\n  style: 'label',\n  type: 'macro',\n});\n\nregister({\n  defaultParams: ['1m'],\n  params: [\n    {\n      name: 'name',\n      options: ['1s', '1min', '1h', '1d', '1w', '1m', '1y'],\n      type: 'string',\n    },\n  ],\n  style: 'label',\n  type: 'timeshift',\n});\n\nregister({\n  type: 'aggregate',\n  style: 'label',\n  params: [\n    {\n      name: 'name',\n      type: 'string',\n      options: ['avg', 'count', 'min', 'max', 'sum', 'stddev', 'variance'],\n    },\n  ],\n  defaultParams: ['avg'],\n});\n\nregister({\n  type: 'alias',\n  style: 'label',\n  params: [{ name: 'name', type: 'string', quote: 'double' }],\n  defaultParams: ['alias'],\n});\n\nregister({\n  type: 'time',\n  style: 'function',\n  label: 'time',\n  params: [\n    {\n      name: 'interval',\n      options: ['$__interval', '1s', '1min', '1h', '1d', '1w', '1m', '1y', 'auto'],\n      type: 'interval',\n    },\n    {\n      name: 'mininterval',\n      type: 'interval',\n      options: ['$__mininterval', '1s', '1min', '1h', '1d', '1w', '1m', '1y'],\n    },\n  ],\n  defaultParams: ['$__interval', '0'],\n});\n\nregister({\n  type: 'window',\n  style: 'label',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['delta', 'increase', 'rate', 'sum'],\n    },\n  ],\n  defaultParams: ['increase'],\n});\n\nregister({\n  type: 'moving_window',\n  style: 'label',\n  label: 'Moving Window:',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['avg'],\n    },\n    {\n      name: 'window_size',\n      type: 'number',\n      options: ['3', '5', '7', '10', '20'],\n    },\n  ],\n  defaultParams: ['avg', '5'],\n});\n\nregister({\n  type: 'hll_count.merge',\n  style: 'label',\n  label: 'Hll_count.merge:',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['precision'],\n    },\n    {\n      name: 'precision',\n      type: 'number',\n      options: ['10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24'],\n    },\n  ],\n  defaultParams: ['precision', '15'],\n});\n\nregister({\n  type: 'hll_count.extract',\n  style: 'label',\n  label: 'Hll_count.extract:',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['precision'],\n    },\n    {\n      name: 'precision',\n      type: 'number',\n      options: ['10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24'],\n    },\n  ],\n  defaultParams: ['precision', '15'],\n});\n\nexport default {\n  create: createPart,\n};\n","import appEvents from 'grafana/app/core/app_events';\nimport { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\nimport BigQueryQuery from './bigquery_query';\nimport { SqlPart } from './sql_part';\nimport sqlPart from './sql_part';\n\nexport interface QueryMeta {\n  sql: string;\n}\n\nconst defaultQuery = `SELECT\n  time_column,\n  value1\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n`;\n\nexport class BigQueryQueryCtrl extends QueryCtrl {\n  public static templateUrl = 'partials/query.editor.html';\n  public formats: any[];\n  public orderByCols: any[];\n  public orderBySorts: any[];\n  public queryModel: BigQueryQuery;\n  public lastQueryMeta: QueryMeta;\n  public lastQueryError: string;\n  public locations: any[];\n  public showHelp: boolean;\n  public projectSegment: any;\n  public datasetSegment: any;\n  public tableSegment: any;\n  public tablesDataPromise: any;\n  public whereAdd: any;\n  public timeColumnSegment: any;\n  public metricColumnSegment: any;\n  public selectMenu: any[];\n  public selectParts: SqlPart[][];\n  public groupParts: SqlPart[];\n  public whereParts: SqlPart[];\n  public orderParts: SqlPart[];\n  public groupAdd: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, private templateSrv, private $q, private uiSegmentSrv) {\n    super($scope, $injector);\n    this.queryModel = new BigQueryQuery(this.target, templateSrv, this.panel.scopedVars);\n    this.updateProjection();\n    this.formats = [\n      { text: 'Time series', value: 'time_series' },\n      { text: 'Table', value: 'table' },\n    ];\n    this.orderByCols = [\n      { text: 'Time', value: '1' },\n      { text: 'Metric', value: '2' },\n    ];\n    this.orderBySorts = [\n      { text: 'ASC', value: '1' },\n      { text: 'DESC', value: '2' },\n    ];\n    this.locations = [\n      // Multi-regional locations\n      { text: 'United States (US)', value: 'US' },\n      { text: 'European Union (EU)', value: 'EU' },\n      // Americas\n      { text: 'Oregon (us-west1)', value: 'us-west1' },\n      { text: 'Los Angeles (us-west2)', value: 'us-west2' },\n      { text: 'Salt Lake City (us-west3)', value: 'us-west3' },\n      { text: 'Las Vegas (us-west4)', value: 'us-west4' },\n      { text: 'Iowa (us-central1)', value: 'us-central1' },\n      { text: 'South Carolina (us-east1)', value: 'us-east1' },\n      { text: 'Northern Virginia (us-east4)', value: 'us-east4' },\n      { text: 'Montréal (northamerica-northeast1)', value: 'northamerica-northeast1' },\n      { text: 'São Paulo (southamerica-east1)', value: 'southamerica-east1' },\n      // Europe\n      { text: 'Belgium (europe-west1)', value: 'europe-west1' },\n      { text: 'Finland (europe-north1)', value: 'europe-north1' },\n      { text: 'Frankfurt (europe-west3)', value: 'europe-west3' },\n      { text: 'London (europe-west2)', value: 'europe-west2' },\n      { text: 'Netherlands (europe-west4)', value: 'europe-west4' },\n      { text: 'Zürich (europe-west6)', value: 'europe-west6' },\n      // Asia Pacific\n      { text: 'Hong Kong (asia-east2)', value: 'asia-east2' },\n      { text: 'Jakarta (asia-southeast2)', value: 'asia-southeast2' },\n      { text: 'Mumbai (asia-south1)', value: 'asia-south1' },\n      { text: 'Osaka (asia-northeast2)', value: 'asia-northeast2' },\n      { text: 'Seoul (asia-northeast3)', value: 'asia-northeast3' },\n      { text: 'Singapore (asia-southeast1)', value: 'asia-southeast1' },\n      { text: 'Sydney (australia-southeast1)', value: 'australia-southeast1' },\n      { text: 'Taiwan (asia-east1)', value: 'asia-east1' },\n      { text: 'Tokyo (asia-northeast1)', value: 'asia-northeast1' },\n    ];\n    if (!this.target.rawSql) {\n      // special handling when in table panel\n      if (this.panelCtrl.panel.type === 'table') {\n        this.target.format = 'table';\n        this.target.rawSql = 'SELECT 1';\n        this.target.rawQuery = true;\n      } else {\n        this.target.rawSql = defaultQuery;\n      }\n    }\n\n    this.projectSegment = !this.target.project\n      ? uiSegmentSrv.newSegment({\n        fake: true,\n        value: 'select project',\n      })\n      : uiSegmentSrv.newSegment(this.target.project);\n\n    this.datasetSegment = !this.target.dataset\n      ? uiSegmentSrv.newSegment({\n        fake: true,\n        value: 'select dataset',\n      })\n      : uiSegmentSrv.newSegment(this.target.dataset);\n\n    this.tableSegment = !this.target.table\n      ? uiSegmentSrv.newSegment({\n        fake: true,\n        value: 'select table',\n      })\n      : uiSegmentSrv.newSegment(this.target.table);\n\n    this.timeColumnSegment = uiSegmentSrv.newSegment(this.target.timeColumn);\n    this.metricColumnSegment = uiSegmentSrv.newSegment(this.target.metricColumn);\n\n    this.buildSelectMenu();\n    this.whereAdd = this.uiSegmentSrv.newPlusButton();\n    this.groupAdd = this.uiSegmentSrv.newPlusButton();\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  public updateProjection() {\n    this.selectParts = _.map(this.target.select, (parts: any) => {\n      return _.map(parts, sqlPart.create).filter(n => n);\n    });\n    this.whereParts = _.map(this.target.where, sqlPart.create).filter(n => n);\n    this.groupParts = _.map(this.target.group, sqlPart.create).filter(n => n);\n  }\n\n  public updatePersistedParts() {\n    this.target.select = _.map(this.selectParts, selectParts => {\n      return _.map(selectParts, (part: any) => {\n        return {\n          datatype: part.datatype,\n          params: part.params,\n          type: part.def.type,\n        };\n      });\n    });\n    this.target.where = _.map(this.whereParts, (part: any) => {\n      return {\n        datatype: part.datatype,\n        name: part.name,\n        params: part.params,\n        type: part.def.type,\n      };\n    });\n    this.target.group = _.map(this.groupParts, (part: any) => {\n      return {\n        datatype: part.datatype,\n        params: part.params,\n        type: part.def.type,\n      };\n    });\n  }\n\n  public buildSelectMenu() {\n    this.selectMenu = [];\n    const aggregates = {\n      submenu: [\n        { text: 'Average', value: 'avg' },\n        { text: 'Count', value: 'count' },\n        { text: 'Maximum', value: 'max' },\n        { text: 'Minimum', value: 'min' },\n        { text: 'Sum', value: 'sum' },\n        { text: 'Standard deviation', value: 'stddev' },\n        { text: 'Variance', value: 'variance' },\n      ],\n      text: 'Aggregate Functions',\n      value: 'aggregate',\n    };\n\n    this.selectMenu.push(aggregates);\n\n    const windows = {\n      text: 'Window Functions',\n      value: 'window',\n      submenu: [\n        { text: 'Delta', value: 'delta' },\n        { text: 'Increase', value: 'increase' },\n        { text: 'Rate', value: 'rate' },\n        { text: 'Sum', value: 'sum' },\n        { text: 'Moving Average', value: 'avg', type: 'moving_window' },\n      ],\n    };\n    this.selectMenu.push(windows);\n\n    const hyperloglog = {\n      text: 'HyperLogLog++ Functions',\n      value: 'hyperloglog',\n      submenu: [\n        {\n          text: 'Hll_count.merge',\n          type: 'hll_count.merge',\n          value: 'precision',\n        },\n        {\n          text: 'Hll_count.extract',\n          type: 'hll_count.extract',\n          value: 'precision',\n        },\n      ],\n    };\n    this.selectMenu.push(hyperloglog);\n\n    this.selectMenu.push({ text: 'Alias', value: 'alias' });\n    this.selectMenu.push({ text: 'Column', value: 'column' });\n    this.selectMenu.push({ text: 'Time Shift', value: 'timeshift' });\n  }\n\n  public toggleEditorMode() {\n    if (this.target.rawQuery) {\n      appEvents.emit('confirm-modal', {\n        icon: 'fa-exclamation',\n        onConfirm: () => {\n          this.target.rawQuery = !this.target.rawQuery;\n        },\n        text2: 'Switching to query builder may overwrite your raw SQL.',\n        title: 'Warning',\n        yesText: 'Switch',\n      });\n    } else {\n      this.target.rawQuery = !this.target.rawQuery;\n    }\n  }\n\n  public resetPlusButton(button) {\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    button.html = plusButton.html;\n    button.value = plusButton.value;\n  }\n\n  public getProjectSegments() {\n    return this.datasource\n      .getProjects()\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  public projectChanged() {\n    this.target.project = this.projectSegment.value;\n    this.datasource.projectName = this.projectSegment.value;\n    this.target.dataset = '';\n    this.applySegment(this.datasetSegment, this.fakeSegment('select dataset'));\n    this.applySegment(this.tableSegment, this.fakeSegment('select table'));\n    this.applySegment(this.timeColumnSegment, this.fakeSegment('-- time --'));\n  }\n\n  public getDatasetSegments() {\n    return this.datasource\n      .getDatasets(this.target.project)\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  public datasetChanged() {\n    this.target.dataset = this.datasetSegment.value;\n    this.target.sharded = false;\n    this.target.partitioned = false;\n    this.target.partitionedField = '';\n    this.applySegment(this.tableSegment, this.fakeSegment('select table'));\n    this.applySegment(this.timeColumnSegment, this.fakeSegment('-- time --'));\n  }\n\n  public getTableSegments() {\n    this.tablesDataPromise = this.datasource.getTables(this.target.project, this.target.dataset);\n    return this.tablesDataPromise\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  public tableChanged() {\n    this.target.sharded = false;\n    this.target.partitioned = false;\n    this.target.partitionedField = '';\n    this.target.table = this.tableSegment.value;\n    this.tablesDataPromise.then(value => {\n      value.forEach(v => {\n        if (v.text === this.target.table) {\n          const partitioned = v.value.indexOf('__partitioned');\n          if (partitioned > -1) {\n            this.target.partitioned = true;\n            this.target.partitionedField = v.value.substr(partitioned + '__partitioned'.length + 2);\n          }\n        }\n      });\n    });\n    this.applySegment(this.timeColumnSegment, this.fakeSegment('-- time --'));\n    const sharded = this.target.table.indexOf('_YYYYMMDD');\n    if (sharded > -1) {\n      this.target.table = this.target.table.substring(0, sharded + 1) + '*';\n      this.target.sharded = true;\n    }\n    this.target.where = [];\n    this.target.group = [];\n    this.target.select = [[{ type: 'column', params: ['-- value --'] }]];\n    this.updateProjection();\n\n    const segment = this.uiSegmentSrv.newSegment('none');\n    this.metricColumnSegment.html = segment.html;\n    this.metricColumnSegment.value = segment.value;\n    this.target.metricColumn = 'none';\n\n    const task1 = this.getTimeColumnSegments().then(result => {\n      // check if time column is still valid\n      if (result.length > 0 && !_.find(result, (r: any) => r.text === this.target.timeColumn)) {\n        this.timeColumnSegment.html = this.uiSegmentSrv.newSegment(result[0].text).html;\n        this.timeColumnSegment.value = this.uiSegmentSrv.newSegment(result[0].text).value;\n      }\n      return this.timeColumnChanged(false);\n    });\n\n    const task2 = this.getValueColumnSegments().then(result => {\n      if (result.length > 0) {\n        this.target.select = [[{ type: 'column', params: [result[0].text] }]];\n        this.updateProjection();\n      }\n    });\n    this.$q.all([task1, task2]).then(() => {\n      this.panelCtrl.refresh();\n    });\n  }\n\n  public getTimeColumnSegments() {\n    return this._getColumnSegments(['DATE', 'TIMESTAMP', 'DATETIME']);\n  }\n\n  public getValueColumnSegments() {\n    return this._getColumnSegments(['INT64', 'NUMERIC', 'FLOAT64', 'FLOAT', 'INT', 'INTEGER']);\n  }\n\n  public async timeColumnChanged(refresh?: boolean) {\n    this.target.timeColumn = this.timeColumnSegment.value;\n    this.target.timeColumnType = await this._getDateFieldType();\n    const partModel = sqlPart.create({\n      name: '$__timeFilter',\n      params: [],\n      type: 'macro',\n    });\n    this.setwWereParts(partModel);\n    this.updatePersistedParts();\n    if (refresh !== false) {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  public getMetricColumnSegments() {\n    return this.datasource\n      .getTableFields(this.target.project, this.target.dataset, this.target.table, ['STRING', 'BYTES'])\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  public metricColumnChanged() {\n    this.target.metricColumn = this.metricColumnSegment.value;\n    this.panelCtrl.refresh();\n  }\n\n  public onDataReceived(dataList) {\n    return;\n  }\n\n  public onDataError(err) {\n    if (err.data && err.data.results) {\n      const queryRes = err.data.results[this.target.refId];\n      if (queryRes) {\n        this.lastQueryMeta = queryRes.meta;\n        this.lastQueryError = queryRes.error;\n      }\n    }\n  }\n\n  public transformToSegments(config) {\n    return results => {\n      const segments = _.map(results, segment => {\n        return this.uiSegmentSrv.newSegment({\n          value: segment.text,\n          expandable: segment.expandable,\n        });\n      });\n      if (config.addTemplateVars) {\n        for (const variable of this.templateSrv.variables) {\n          let value;\n          value = '$' + variable.name;\n          if (config.templateQuoter && variable.multi === false) {\n            value = config.templateQuoter(value);\n          }\n          segments.unshift(\n            this.uiSegmentSrv.newSegment({\n              expandable: true,\n              type: 'template',\n              value,\n            })\n          );\n        }\n      }\n\n      if (config.addNone) {\n        segments.unshift(\n          this.uiSegmentSrv.newSegment({\n            type: 'template',\n            value: 'none',\n            expandable: true,\n          })\n        );\n      }\n      return segments;\n    };\n  }\n\n  public findAggregateIndex(selectParts) {\n    return _.findIndex(selectParts, (p: any) => p.def.type === 'aggregate' || p.def.type === 'percentile');\n  }\n\n  public findWindowIndex(selectParts) {\n    return _.findIndex(selectParts, (p: any) => p.def.type === 'window' || p.def.type === 'moving_window');\n  }\n\n  public findHllIndex(selectParts) {\n    return _.findIndex(selectParts, (p: any) => p.def.type === 'hyperloglog' || p.def.type === 'hll_count.init');\n  }\n\n  public findTimeShiftIndex(selectParts) {\n    return _.findIndex(selectParts, (p: any) => p.def.type === 'timeshift');\n  }\n  public applySegment(dst, src) {\n    dst.value = src.value;\n    dst.html = src.html || src.value;\n    dst.fake = src.fake === undefined ? false : src.fake;\n  }\n\n  public fakeSegment(value) {\n    return this.uiSegmentSrv.newSegment({ fake: true, value });\n  }\n\n  public addSelectPart(selectParts, item, subItem) {\n    let partType = item.value;\n    if (subItem && subItem.type) {\n      partType = subItem.type;\n    }\n    let partModel = sqlPart.create({ type: partType });\n    if (subItem) {\n      partModel.params[0] = subItem.value;\n    }\n    let addAlias = false;\n    const _addAlias = function () {\n      return !_.find(selectParts, (p: any) => p.def.type === 'alias');\n    };\n    switch (partType) {\n      case 'column':\n        const parts = _.map(selectParts, (part: any) => {\n          return sqlPart.create({\n            type: part.def.type,\n            params: _.clone(part.params),\n          });\n        });\n        this.selectParts.push(parts);\n        break;\n      case 'percentile':\n      case 'aggregate':\n        // add group by if no group by yet\n        if (this.target.group.length === 0) {\n          this.addGroup('time', '$__interval');\n        }\n        const aggIndex = this.findAggregateIndex(selectParts);\n        if (aggIndex !== -1) {\n          // replace current aggregation\n          selectParts[aggIndex] = partModel;\n        } else {\n          selectParts.splice(1, 0, partModel);\n        }\n        if (_addAlias()) {\n          addAlias = true;\n        }\n        break;\n      case 'moving_window':\n      case 'window':\n        const windowIndex = this.findWindowIndex(selectParts);\n        if (windowIndex !== -1) {\n          // replace current window function\n          selectParts[windowIndex] = partModel;\n        } else {\n          const aggIndex = this.findAggregateIndex(selectParts);\n          if (aggIndex !== -1) {\n            selectParts.splice(aggIndex + 1, 0, partModel);\n          } else {\n            selectParts.splice(1, 0, partModel);\n          }\n        }\n      case 'hll_count.merge':\n      case 'hll_count.extract':\n        const hllIndex = this.findHllIndex(selectParts);\n        if (hllIndex !== -1) {\n          // replace current window function\n          selectParts[windowIndex] = partModel;\n        } else {\n          const aggIndex = this.findAggregateIndex(selectParts);\n          if (aggIndex !== -1) {\n            selectParts.splice(aggIndex + 1, 0, partModel);\n          } else {\n            selectParts.splice(1, 0, partModel);\n          }\n        }\n\n        if (_addAlias()) {\n          addAlias = true;\n        }\n        break;\n      case 'alias':\n        addAlias = true;\n        break;\n      case 'timeshift':\n        const timeShiftIndex = this.findTimeShiftIndex(selectParts);\n        if (timeShiftIndex !== -1) {\n          selectParts[timeShiftIndex] = partModel;\n        } else {\n          selectParts.push(partModel);\n        }\n        break;\n    }\n    if (addAlias) {\n      // set initial alias name to column name\n      partModel = sqlPart.create({\n        type: 'alias',\n        params: [selectParts[0].params[0].replace(/\"/g, '')],\n      });\n      if (selectParts[selectParts.length - 1].def.type === 'alias') {\n        selectParts[selectParts.length - 1] = partModel;\n      } else {\n        selectParts.push(partModel);\n      }\n    }\n    this.updatePersistedParts();\n    this.panelCtrl.refresh();\n  }\n\n  public removeSelectPart(selectParts, part) {\n    if (part.def.type === 'column') {\n      // remove all parts of column unless its last column\n      if (this.selectParts.length > 1) {\n        const modelsIndex = _.indexOf(this.selectParts, selectParts);\n        this.selectParts.splice(modelsIndex, 1);\n      }\n    } else {\n      const partIndex = _.indexOf(selectParts, part);\n      selectParts.splice(partIndex, 1);\n    }\n\n    this.updatePersistedParts();\n  }\n\n  public handleSelectPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'get-param-options': {\n        switch (part.def.type) {\n          case 'aggregate':\n            return;\n          case 'column':\n            return this.getValueColumnSegments();\n        }\n      }\n      case 'part-param-changed': {\n        this.updatePersistedParts();\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'action': {\n        this.removeSelectPart(selectParts, part);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  public handleGroupPartEvent(part, index, evt) {\n    switch (evt.name) {\n      case 'get-param-options': {\n        return this._getAllFields();\n      }\n      case 'part-param-changed': {\n        this.updatePersistedParts();\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'action': {\n        this.removeGroup(part, index);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  public addGroup(partType: string, value: string) {\n    this._setGroupParts(partType, value);\n    // add aggregates when adding group by\n    for (const selectParts of this.selectParts) {\n      if (!selectParts.some(part => part.def.type === 'aggregate')) {\n        const aggregate = sqlPart.create({\n          params: ['avg'],\n          type: 'aggregate',\n        });\n        selectParts.splice(1, 0, aggregate);\n        if (!selectParts.some(part => part.def.type === 'alias')) {\n          const alias = sqlPart.create({\n            params: [selectParts[0].part.params[0]],\n            type: 'alias',\n          });\n          selectParts.push(alias);\n        }\n      }\n    }\n\n    this.updatePersistedParts();\n  }\n\n  public removeGroup(part, index) {\n    if (part.def.type === 'time') {\n      // remove aggregations\n      this.selectParts = _.map(this.selectParts, (s: any) => {\n        return _.filter(s, (part: any) => {\n          return !(part.def.type === 'aggregate' || part.def.type === 'percentile');\n        });\n      });\n    }\n\n    this.groupParts.splice(index, 1);\n    this.updatePersistedParts();\n  }\n\n  public _getAllFields() {\n    return this.datasource\n      .getTableFields(this.target.project, this.target.dataset, this.target.table, [])\n      .then(this.transformToSegments({}))\n      .catch(this.handleQueryError.bind(this));\n  }\n  public handleWherePartEvent(whereParts, part, evt, index) {\n    switch (evt.name) {\n      case 'get-param-options': {\n        switch (evt.param.name) {\n          case 'left':\n            return this._getAllFields();\n          case 'right':\n            return this.$q.when([]);\n          case 'op':\n            return this.$q.when(\n              this.uiSegmentSrv.newOperators([\n                '=',\n                '!=',\n                '<',\n                '<=',\n                '>',\n                '>=',\n                'IN',\n                'LIKE',\n                'NOT LIKE',\n                'IS',\n                'IS NOT',\n              ])\n            );\n          default:\n            return this.$q.when([]);\n        }\n      }\n      case 'part-param-changed': {\n        this.updatePersistedParts();\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'action': {\n        // remove element\n        whereParts.splice(index, 1);\n        this.updatePersistedParts();\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  public getWhereOptions() {\n    const options = [];\n    options.push(this.uiSegmentSrv.newSegment({ type: 'macro', value: '$__timeFilter' }));\n    options.push(this.uiSegmentSrv.newSegment({ type: 'macro', value: '$__timeFrom' }));\n    options.push(this.uiSegmentSrv.newSegment({ type: 'macro', value: '$__timeTo' }));\n    options.push(this.uiSegmentSrv.newSegment({ type: 'expression', value: 'Expression' }));\n    return this.$q.when(options);\n  }\n\n  public setwWereParts(partModel) {\n    if (this.whereParts.length >= 1 && this.whereParts[0].def.type === 'macro') {\n      // replace current macro\n      this.whereParts[0] = partModel;\n    } else {\n      this.whereParts.splice(0, 0, partModel);\n    }\n  }\n\n  public addWhereAction(part, index) {\n    switch (this.whereAdd.type) {\n      case 'macro': {\n        const partModel = sqlPart.create({\n          name: this.whereAdd.value,\n          params: [],\n          type: 'macro',\n        });\n        this.setwWereParts(partModel);\n        break;\n      }\n      default: {\n        this.whereParts.push(\n          sqlPart.create({\n            params: ['value', '=', 'value'],\n            type: 'expression',\n          })\n        );\n      }\n    }\n\n    this.updatePersistedParts();\n    this.resetPlusButton(this.whereAdd);\n    this.panelCtrl.refresh();\n  }\n\n  public getGroupOptions() {\n    return this.getMetricColumnSegments()\n      .then(tags => {\n        const options = [];\n        if (!this.queryModel.hasTimeGroup()) {\n          options.push(\n            this.uiSegmentSrv.newSegment({\n              type: 'time',\n              value: 'time($__interval,0)',\n            })\n          );\n        }\n        for (const tag of tags) {\n          options.push(this.uiSegmentSrv.newSegment({ type: 'column', value: tag.text }));\n        }\n        return options;\n      })\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  public addGroupAction() {\n    switch (this.groupAdd.value) {\n      default: {\n        this.addGroup(this.groupAdd.type, this.groupAdd.value);\n      }\n    }\n\n    this.resetPlusButton(this.groupAdd);\n    this.panelCtrl.refresh();\n  }\n\n  public handleQueryError(err) {\n    this.error = err.message || 'Failed to issue metric query';\n    return [];\n  }\n  private _setGroupParts(partType: string, value: string) {\n    let params = [value];\n    if (partType === 'time') {\n      params = ['$__interval', 'none'];\n    }\n    const partModel = sqlPart.create({ type: partType, params });\n    if (partType === 'time') {\n      // put timeGroup at start\n      this.groupParts.splice(0, 0, partModel);\n    } else {\n      this.groupParts.push(partModel);\n    }\n  }\n  private _getColumnSegments(filter) {\n    return this.datasource\n      .getTableFields(this.target.project, this.target.dataset, this.target.table, filter)\n      .then(this.uiSegmentSrv.transformToSegments(false))\n      .catch(this.handleQueryError.bind(this));\n  }\n\n  private async _getDateFieldType() {\n    let res = '';\n    await this.datasource\n      .getTableFields(this.target.project, this.target.dataset, this.target.table, ['DATE', 'TIMESTAMP', 'DATETIME'])\n      .then(result => {\n        for (const f of result) {\n          if (f.text === this.target.timeColumn) {\n            res = f.value;\n          }\n        }\n      });\n    return res;\n  }\n}\n","// @ts-nocheck\nimport { IJwt } from './types';\n// import { isCombinedModifierFlagSet } from 'tslint';\n\nexport class BigQueryConfigCtrl {\n  private static templateUrl = 'partials/config.html';\n  public authenticationTypes: any[];\n  public locations: any[];\n  public inputDataValid: boolean;\n  public jsonText: string;\n  public validationErrors: string[] = [];\n  private datasourceSrv: any;\n  private current: any;\n  private readonly defaultAuthenticationType: string;\n  private readonly defaultFlatRateProject: string;\n  private readonly defaultProcessingLocation: string;\n  private queryPriority: { text: string; value: string }[];\n\n  /** @ngInject */\n  constructor(datasourceSrv) {\n    this.defaultAuthenticationType = 'jwt';\n    this.defaultFlatRateProject = undefined;\n    this.defaultProcessingLocation = undefined;\n    this.datasourceSrv = datasourceSrv;\n    this.current.jsonData = this.current.jsonData || {};\n    this.current.jsonData.authenticationType = this.current.jsonData.authenticationType\n      ? this.current.jsonData.authenticationType\n      : this.defaultAuthenticationType;\n    if (this.current.jsonData.flatRateProject === undefined) {\n      this.current.jsonData.flatRateProject = this.defaultFlatRateProject;\n    }\n    if (this.current.jsonData.processingLocations === undefined) {\n      this.current.jsonData.processingLocations = this.defaultProcessingLocation;\n    }\n    if (\n      !(\n        this.current.jsonData.queryPriority &&\n        this.current.jsonData.queryPriority.match(/\\b^INTERACTIVE$\\b|\\b^BATCH$\\b/i)\n      )\n    ) {\n      this.current.jsonData.queryPriority = 'INTERACTIVE';\n    }\n\n    this.current.secureJsonData = this.current.secureJsonData || {};\n    this.current.secureJsonFields = this.current.secureJsonFields || {};\n    this.authenticationTypes = [\n      { key: this.defaultAuthenticationType, value: 'Google JWT File' },\n      { key: 'gce', value: 'GCE Default Service Account' },\n    ];\n    this.locations = [\n      // Multi-regional locations\n      { text: 'United States (US)', value: 'US' },\n      { text: 'European Union (EU)', value: 'EU' },\n      { text: 'Oregon (us-west1)', value: 'us-west1' },\n      { text: 'Los Angeles (us-west2)', value: 'us-west2' },\n      { text: 'Salt Lake City (us-west3)', value: 'us-west3' },\n      { text: 'Las Vegas (us-west4)', value: 'us-west4' },\n      { text: 'Iowa (us-central1)', value: 'us-central1' },\n      { text: 'South Carolina (us-east1)', value: 'us-east1' },\n      { text: 'Northern Virginia (us-east4)', value: 'us-east4' },\n      {\n        text: 'Montréal (northamerica-northeast1)',\n        value: 'northamerica-northeast1',\n      },\n      { text: 'São Paulo (southamerica-east1)', value: 'southamerica-east1' },\n      // Europe\n      { text: 'Belgium (europe-west1)', value: 'europe-west1' },\n      { text: 'Finland (europe-north1)', value: 'europe-north1' },\n      { text: 'Frankfurt (europe-west3)', value: 'europe-west3' },\n      { text: 'London (europe-west2)', value: 'europe-west2' },\n      { text: 'Netherlands (europe-west4)', value: 'europe-west4' },\n      { text: 'Zürich (europe-west6)', value: 'europe-west6' },\n      // Asia Pacific\n      { text: 'Hong Kong (asia-east2)', value: 'asia-east2' },\n      { text: 'Jakarta (asia-southeast2)', value: 'asia-southeast2' },\n      { text: 'Mumbai (asia-south1)', value: 'asia-south1' },\n      { text: 'Osaka (asia-northeast2)', value: 'asia-northeast2' },\n      { text: 'Seoul (asia-northeast3)', value: 'asia-northeast3' },\n      { text: 'Singapore (asia-southeast1)', value: 'asia-southeast1' },\n      { text: 'Sydney (australia-southeast1)', value: 'australia-southeast1' },\n      { text: 'Taiwan (asia-east1)', value: 'asia-east1' },\n      { text: 'Tokyo (asia-northeast1)', value: 'asia-northeast1' },\n    ];\n    this.queryPriority = [\n      { text: 'INTERACTIVE', value: 'INTERACTIVE' },\n      { text: 'BATCH', value: 'BATCH' },\n    ];\n  }\n\n  public onUpload(json) {\n    this.jsonText = '';\n    if (this.validateJwt(json)) {\n      this.save(json);\n    }\n  }\n\n  public onPasteJwt(e) {\n    try {\n      const json = JSON.parse(e.originalEvent.clipboardData.getData('text/plain') || this.jsonText);\n      if (this.validateJwt(json)) {\n        this.save(json);\n      }\n    } catch (error) {\n      this.resetValidationMessages();\n      this.validationErrors.push(`Invalid json: ${error.message}`);\n    }\n  }\n\n  public resetValidationMessages() {\n    this.validationErrors = [];\n    this.inputDataValid = false;\n    this.jsonText = '';\n\n    this.current.jsonData = {\n      authenticationType: this.current.jsonData.authenticationType,\n    };\n    this.current.secureJsonData = {};\n    this.current.secureJsonFields = {};\n  }\n\n  private save(jwt: IJwt) {\n    this.current.secureJsonData.privateKey = jwt.private_key;\n    this.current.jsonData.tokenUri = jwt.token_uri;\n    this.current.jsonData.clientEmail = jwt.client_email;\n    this.current.jsonData.defaultProject = jwt.project_id;\n  }\n\n  private validateJwt(jwt: IJwt) {\n    this.resetValidationMessages();\n    if (!jwt.private_key || jwt.private_key.length === 0) {\n      this.validationErrors.push('Private key field missing in JWT file.');\n    }\n\n    if (!jwt.token_uri || jwt.token_uri.length === 0) {\n      this.validationErrors.push('Token URI field missing in JWT file.');\n    }\n\n    if (!jwt.client_email || jwt.client_email.length === 0) {\n      this.validationErrors.push('Client Email field missing in JWT file.');\n    }\n\n    if (!jwt.project_id || jwt.project_id.length === 0) {\n      this.validationErrors.push('Project Id field missing in JWT file.');\n    }\n\n    if (this.validationErrors.length === 0) {\n      this.inputDataValid = true;\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { BigQueryDatasource } from './datasource';\nimport { BigQueryQueryCtrl } from './query_ctrl';\nimport { BigQueryConfigCtrl } from './config_ctrl';\n\nconst defaultQuery = `SELECT\n  extract(epoch from time_column) AS time,\n  text_column as text,\n  tags_column as tags\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n`;\n\nclass BigQueryAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n\n  public annotation: any;\n\n  /** @ngInject */\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n}\n\nexport {\n  BigQueryDatasource,\n  BigQueryDatasource as Datasource,\n  BigQueryQueryCtrl as QueryCtrl,\n  BigQueryConfigCtrl as ConfigCtrl,\n  BigQueryAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n"],"sourceRoot":""}